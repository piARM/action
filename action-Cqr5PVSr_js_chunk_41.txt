=ne[fe]},blockSize:128/32,ivSize:64/32});function ue(){for(var le=this._X,ce=this._C,de=0;de<8;de++)oe[de]=ce[de];ce[0]=ce[0]+1295307597+this._b|0,ce[1]=ce[1]+3545052371+(ce[0]>>>0<oe[0]>>>0?1:0)|0,ce[2]=ce[2]+886263092+(ce[1]>>>0<oe[1]>>>0?1:0)|0,ce[3]=ce[3]+1295307597+(ce[2]>>>0<oe[2]>>>0?1:0)|0,ce[4]=ce[4]+3545052371+(ce[3]>>>0<oe[3]>>>0?1:0)|0,ce[5]=ce[5]+886263092+(ce[4]>>>0<oe[4]>>>0?1:0)|0,ce[6]=ce[6]+1295307597+(ce[5]>>>0<oe[5]>>>0?1:0)|0,ce[7]=ce[7]+3545052371+(ce[6]>>>0<oe[6]>>>0?1:0)|0,this._b=ce[7]>>>0<oe[7]>>>0?1:0;for(var de=0;de<8;de++){var fe=le[de]+ce[de],pe=fe&65535,me=fe>>>16,ge=((pe*pe>>>17)+pe*me>>>15)+me*me,De=((fe&4294901760)*fe|0)+((fe&65535)*fe|0);ie[de]=ge^De}le[0]=ie[0]+(ie[7]<<16|ie[7]>>>16)+(ie[6]<<16|ie[6]>>>16)|0,le[1]=ie[1]+(ie[0]<<8|ie[0]>>>24)+ie[7]|0,le[2]=ie[2]+(ie[1]<<16|ie[1]>>>16)+(ie[0]<<16|ie[0]>>>16)|0,le[3]=ie[3]+(ie[2]<<8|ie[2]>>>24)+ie[1]|0,le[4]=ie[4]+(ie[3]<<16|ie[3]>>>16)+(ie[2]<<16|ie[2]>>>16)|0,le[5]=ie[5]+(ie[4]<<8|ie[4]>>>24)+ie[3]|0,le[6]=ie[6]+(ie[5]<<16|ie[5]>>>16)+(ie[4]<<16|ie[4]>>>16)|0,le[7]=ie[7]+(ie[6]<<8|ie[6]>>>24)+ie[5]|0}c.Rabbit=te._createHelper(se)}(),u.Rabbit})}(rabbit$1)),rabbit$1.exports}var rabbitLegacy$1={exports:{}},rabbitLegacy=rabbitLegacy$1.exports,hasRequiredRabbitLegacy;function requireRabbitLegacy(){return hasRequiredRabbitLegacy||(hasRequiredRabbitLegacy=1,function(n,t){(function(u,c,ee){n.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(rabbitLegacy,function(u){return function(){var c=u,ee=c.lib,te=ee.StreamCipher,ae=c.algo,ne=[],oe=[],ie=[],se=ae.RabbitLegacy=te.extend({_doReset:function(){var le=this._key.words,ce=this.cfg.iv,de=this._X=[le[0],le[3]<<16|le[2]>>>16,le[1],le[0]<<16|le[3]>>>16,le[2],le[1]<<16|le[0]>>>16,le[3],le[2]<<16|le[1]>>>16],fe=this._C=[le[2]<<16|le[2]>>>16,le[0]&4294901760|le[1]&65535,le[3]<<16|le[3]>>>16,le[1]&4294901760|le[2]&65535,le[0]<<16|le[0]>>>16,le[2]&4294901760|le[3]&65535,le[1]<<16|le[1]>>>16,le[3]&4294901760|le[0]&65535];this._b=0;for(var pe=0;pe<4;pe++)ue.call(this);for(var pe=0;pe<8;pe++)fe[pe]^=de[pe+4&7];if(ce){var me=ce.words,ge=me[0],De=me[1],Ce=(ge<<8|ge>>>24)&16711935|(ge<<24|ge>>>8)&4278255360,we=(De<<8|De>>>24)&16711935|(De<<24|De>>>8)&4278255360,xe=Ce>>>16|we&4294901760,Re=we<<16|Ce&65535;fe[0]^=Ce,fe[1]^=xe,fe[2]^=we,fe[3]^=Re,fe[4]^=Ce,fe[5]^=xe,fe[6]^=we,fe[7]^=Re;for(var pe=0;pe<4;pe++)ue.call(this)}},_doProcessBlock:function(le,ce){var de=this._X;ue.call(this),ne[0]=de[0]^de[5]>>>16^de[3]<<16,ne[1]=de[2]^de[7]>>>16^de[5]<<16,ne[2]=de[4]^de[1]>>>16^de[7]<<16,ne[3]=de[6]^de[3]>>>16^de[1]<<16;for(var fe=0;fe<4;fe++)ne[fe]=(ne[fe]<<8|ne[fe]>>>24)&16711935|(ne[fe]<<24|ne[fe]>>>8)&4278255360,le[ce+fe]^=ne[fe]},blockSize:128/32,ivSize:64/32});function ue(){for(var le=this._X,ce=this._C,de=0;de<8;de++)oe[de]=ce[de];ce[0]=ce[0]+1295307597+this._b|0,ce[1]=ce[1]+3545052371+(ce[0]>>>0<oe[0]>>>0?1:0)|0,ce[2]=ce[2]+886263092+(ce[1]>>>0<oe[1]>>>0?1:0)|0,ce[3]=ce[3]+1295307597+(ce[2]>>>0<oe[2]>>>0?1:0)|0,ce[4]=ce[4]+3545052371+(ce[3]>>>0<oe[3]>>>0?1:0)|0,ce[5]=ce[5]+886263092+(ce[4]>>>0<oe[4]>>>0?1:0)|0,ce[6]=ce[6]+1295307597+(ce[5]>>>0<oe[5]>>>0?1:0)|0,ce[7]=ce[7]+3545052371+(ce[6]>>>0<oe[6]>>>0?1:0)|0,this._b=ce[7]>>>0<oe[7]>>>0?1:0;for(var de=0;de<8;de++){var fe=le[de]+ce[de],pe=fe&65535,me=fe>>>16,ge=((pe*pe>>>17)+pe*me>>>15)+me*me,De=((fe&4294901760)*fe|0)+((fe&65535)*fe|0);ie[de]=ge^De}le[0]=ie[0]+(ie[7]<<16|ie[7]>>>16)+(ie[6]<<16|ie[6]>>>16)|0,le[1]=ie[1]+(ie[0]<<8|ie[0]>>>24)+ie[7]|0,le[2]=ie[2]+(ie[1]<<16|ie[1]>>>16)+(ie[0]<<16|ie[0]>>>16)|0,le[3]=ie[3]+(ie[2]<<8|ie[2]>>>24)+ie[1]|0,le[4]=ie[4]+(ie[3]<<16|ie[3]>>>16)+(ie[2]<<16|ie[2]>>>16)|0,le[5]=ie[5]+(ie[4]<<8|ie[4]>>>24)+ie[3]|0,le[6]=ie[6]+(ie[5]<<16|ie[5]>>>16)+(ie[4]<<16|ie[4]>>>16)|0,le[7]=ie[7]+(ie[6]<<8|ie[6]>>>24)+ie[5]|0}c.RabbitLegacy=te._createHelper(se)}(),u.RabbitLegacy})}(rabbitLegacy$1)),rabbitLegacy$1.exports}var blowfish$1={exports:{}},blowfish=blowfish$1.exports,hasRequiredBlowfish;function requireBlowfish(){return hasRequiredBlowfish||(hasRequiredBlowfish=1,function(n,t){(function(u,c,ee){n.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(blowfish,function(u){return function(){var c=u,ee=c.lib,te=ee.BlockCipher,ae=c.algo;const ne=16,oe=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],ie=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var se={pbox:[],sbox:[]};function ue(pe,me){let ge=me>>24&255,De=me>>16&255,Ce=me>>8&255,we=me&255,xe=pe.sbox[0][ge]+pe.sbox[1][De];return xe=xe^pe.sbox[2][Ce],xe=xe+pe.sbox[3][we],xe}function le(pe,me,ge){let De=me,Ce=ge,we;for(let xe=0;xe<ne;++xe)De=De^pe.pbox[xe],Ce=ue(pe,De)^Ce,we=De,De=Ce,Ce=we;return we=De,De=Ce,Ce=we,Ce=Ce^pe.pbox[ne],De=De^pe.pbox[ne+1],{left:De,right:Ce}}function ce(pe,me,ge){let De=me,Ce=ge,we;for(let xe=ne+1;xe>1;--xe)De=De^pe.pbox[xe],Ce=ue(pe,De)^Ce,we=De,De=Ce,Ce=we;return we=De,De=Ce,Ce=we,Ce=Ce^pe.pbox[1],De=De^pe.pbox[0],{left:De,right:Ce}}function de(pe,me,ge){for(let Re=0;Re<4;Re++){pe.sbox[Re]=[];for(let Be=0;Be<256;Be++)pe.sbox[Re][Be]=ie[Re][Be]}let De=0;for(let Re=0;Re<ne+2;Re++)pe.pbox[Re]=oe[Re]^me[De],De++,De>=ge&&(De=0);let Ce=0,we=0,xe=0;for(let Re=0;Re<ne+2;Re+=2)xe=le(pe,Ce,we),Ce=xe.left,we=xe.right,pe.pbox[Re]=Ce,pe.pbox[Re+1]=we;for(let Re=0;Re<4;Re++)for(let Be=0;Be<256;Be+=2)xe=le(pe,Ce,we),Ce=xe.left,we=xe.right,pe.sbox[Re][Be]=Ce,pe.sbox[Re][Be+1]=we;return!0}var fe=ae.Blowfish=te.extend({_doReset:function(){if(this._keyPriorReset!==this._key){var pe=this._keyPriorReset=this._key,me=pe.words,ge=pe.sigBytes/4;de(se,me,ge)}},encryptBlock:function(pe,me){var ge=le(se,pe[me],pe[me+1]);pe[me]=ge.left,pe[me+1]=ge.right},decryptBlock:function(pe,me){var ge=ce(se,pe[me],pe[me+1]);pe[me]=ge.left,pe[me+1]=ge.right},blockSize:64/32,keySize:128/32,ivSize:64/32});c.Blowfish=te._createHelper(fe)}(),u.Blowfish})}(blowfish$1)),blowfish$1.exports}var cryptoJs=cryptoJs$1.exports,hasRequiredCryptoJs;function requireCryptoJs(){return hasRequiredCryptoJs||(hasRequiredCryptoJs=1,function(n,t){(function(u,c,ee){n.exports=c(requireCore(),requireX64Core(),requireLibTypedarrays(),requireEncUtf16(),requireEncBase64(),requireEncBase64url(),requireMd5(),requireSha1(),requireSha256$1(),requireSha224(),requireSha512(),requireSha384(),requireSha3(),requireRipemd160(),requireHmac(),requirePbkdf2(),requireEvpkdf(),requireCipherCore(),requireModeCfb(),requireModeCtr(),requireModeCtrGladman(),requireModeOfb(),requireModeEcb(),requirePadAnsix923(),requirePadIso10126(),requirePadIso97971(),requirePadZeropadding(),requirePadNopadding(),requireFormatHex(),requireAes(),requireTripledes(),requireRc4(),requireRabbit(),requireRabbitLegacy(),requireBlowfish())})(cryptoJs,function(u){return u})}(cryptoJs$1)),cryptoJs$1.exports}var hasRequiredBase;function requireBase(){if(hasRequiredBase)return Base;hasRequiredBase=1;var n=Base&&Base.__importDefault||function(ee){return ee&&ee.__esModule?ee:{default:ee}};Object.defineProperty(Base,"__esModule",{value:!0}),Base.Base=void 0;const t=requireDist$5(),u=n(requireCryptoJs());let c=class Ya{print(){Ya.print(this)}bufferIndexOf(te,ae,ne=!1){if(ne)return this.binarySearch(te,ae,t.Buffer.compare);const oe=(ie,se)=>ie.equals(se);return this.linearSearch(te,ae,oe)}static binarySearch(te,ae,ne){let oe=0,ie=te.length-1;for(;oe<=ie;){const se=Math.floor((oe+ie)/2),ue=ne(te[se],ae);if(ue===0){for(let le=se-1;le>=0;le--)if(ne(te[le],ae)!==0)return le+1;return 0}else ue<0?oe=se+1:ie=se-1}return-1}binarySearch(te,ae,ne){return Ya.binarySearch(te,ae,ne)}static linearSearch(te,ae,ne){for(let oe=0;oe<te.length;oe++)if(ne(te[oe],ae))return oe;return-1}linearSearch(te,ae,ne){return Ya.linearSearch(te,ae,ne)}static bufferify(te){if(!t.Buffer.isBuffer(te)){if(typeof te=="object"&&te.words)return t.Buffer.from(te.toString(u.default.enc.Hex),"hex");if(Ya.isHexString(te))return t.Buffer.from(te.replace(/^0x/,""),"hex");if(typeof te=="string")return t.Buffer.from(te);if(typeof te=="bigint")return t.Buffer.from(te.toString(16),"hex");if(te instanceof Uint8Array)return t.Buffer.from(te.buffer);if(typeof te=="number"){let ae=te.toString();return ae.length%2&&(ae=`0${ae}`),t.Buffer.from(ae,"hex")}else if(ArrayBuffer.isView(te))return t.Buffer.from(te.buffer,te.byteOffset,te.byteLength)}return te}bigNumberify(te){return Ya.bigNumberify(te)}static bigNumberify(te){if(typeof te=="bigint")return te;if(typeof te=="string")return te.startsWith("0x")&&Ya.isHexString(te)?BigInt("0x"+te.replace("0x","").toString()):BigInt(te);if(t.Buffer.isBuffer(te))return BigInt("0x"+te.toString("hex"));if(te instanceof Uint8Array||typeof te=="number")return BigInt(te);throw new Error("cannot bigNumberify")}static isHexString(te){return typeof te=="string"&&/^(0x)?[0-9A-Fa-f]*$/.test(te)}static print(te){console.log(te.toString())}bufferToHex(te,ae=!0){return Ya.bufferToHex(te,ae)}static bufferToHex(te,ae=!0){return`${ae?"0x":""}${(te||t.Buffer.alloc(0)).toString("hex")}`}bufferify(te){return Ya.bufferify(te)}bufferifyFn(te){return ae=>{const ne=te(ae);return t.Buffer.isBuffer(ne)?ne:this.isHexString(ne)?t.Buffer.from(ne.replace("0x",""),"hex"):typeof ne=="string"?t.Buffer.from(ne):typeof ne=="bigint"?t.Buffer.from(ae.toString(16),"hex"):ArrayBuffer.isView(ne)?t.Buffer.from(ne.buffer,ne.byteOffset,ne.byteLength):t.Buffer.from(te(u.default.enc.Hex.parse(ae.toString("hex"))).toString(u.default.enc.Hex),"hex")}}isHexString(te){return Ya.isHexString(te)}log2(te){return te===1?0:1+this.log2(te/2|0)}zip(te,ae){return te.map((ne,oe)=>[ne,ae[oe]])}static hexZeroPad(te,ae){return"0x"+te.replace("0x","").padStart(ae,"0")}};return Base.Base=c,Base.default=c,Base}var hasRequiredMerkleTree;function requireMerkleTree(){if(hasRequiredMerkleTree)return MerkleTree;hasRequiredMerkleTree=1;var n=MerkleTree&&MerkleTree.__importDefault||function(ne){return ne&&ne.__esModule?ne:{default:ne}};Object.defineProperty(MerkleTree,"__esModule",{value:!0}),MerkleTree.MerkleTree=void 0;const t=requireDist$5(),u=n(requireBufferReverse()),c=n(requireSha256$1()),ee=n(requireTreeify()),te=n(requireBase());let ae=class Za extends te.default{constructor(oe,ie=c.default,se={}){if(super(),this.duplicateOdd=!1,this.concatenator=t.Buffer.concat,this.hashLeaves=!1,this.isBitcoinTree=!1,this.leaves=[],this.layers=[],this.sortLeaves=!1,this.sortPairs=!1,this.sort=!1,this.fillDefaultHash=null,this.complete=!1,se.complete){if(se.isBitcoinTree)throw new Error('option "complete" is incompatible with "isBitcoinTree"');if(se.duplicateOdd)throw new Error('option "complete" is incompatible with "duplicateOdd"')}if(this.isBitcoinTree=!!se.isBitcoinTree,this.hashLeaves=!!se.hashLeaves,this.sortLeaves=!!se.sortLeaves,this.sortPairs=!!se.sortPairs,this.complete=!!se.complete,se.fillDefaultHash)if(typeof se.fillDefaultHash=="function")this.fillDefaultHash=se.fillDefaultHash;else if(t.Buffer.isBuffer(se.fillDefaultHash)||typeof se.fillDefaultHash=="string")this.fillDefaultHash=(ue,le)=>se.fillDefaultHash;else throw new Error('method "fillDefaultHash" must be a function, Buffer, or string');this.sort=!!se.sort,this.sort&&(this.sortLeaves=!0,this.sortPairs=!0),this.duplicateOdd=!!se.duplicateOdd,se.concatenator&&(this.concatenator=se.concatenator),this.hashFn=this.bufferifyFn(ie),this.processLeaves(oe)}getOptions(){var oe,ie;return{complete:this.complete,isBitcoinTree:this.isBitcoinTree,hashLeaves:this.hashLeaves,sortLeaves:this.sortLeaves,sortPairs:this.sortPairs,sort:this.sort,fillDefaultHash:(ie=(oe=this.fillDefaultHash)===null||oe===void 0?void 0:oe.toString())!==null&&ie!==void 0?ie:null,duplicateOdd:this.duplicateOdd}}processLeaves(oe){if(this.hashLeaves&&(oe=oe.map(this.hashFn)),this.leaves=oe.map(this.bufferify),this.sortLeaves&&(this.leaves=this.leaves.sort(t.Buffer.compare)),this.fillDefaultHash)for(let ie=this.leaves.length;ie<Math.pow(2,Math.ceil(Math.log2(this.leaves.length)));ie++)this.leaves.push(this.bufferify(this.fillDefaultHash(ie,this.hashFn)));this.createHashes(this.leaves)}createHashes(oe){for(this.layers=[oe];oe.length>1;){const ie=this.layers.length;this.layers.push([]);const se=this.complete&&ie===1&&!Number.isInteger(Math.log2(oe.length))?2*oe.length-Math.pow(2,Math.ceil(Math.log2(oe.length))):oe.length;for(let ue=0;ue<oe.length;ue+=2){if(ue>=se){this.layers[ie].push(...oe.slice(se));break}else if(ue+1===oe.length&&oe.length%2===1){const pe=oe[oe.length-1];let me=pe;if(this.isBitcoinTree){me=this.hashFn(this.concatenator([u.default(pe),u.default(pe)])),me=u.default(this.hashFn(me)),this.layers[ie].push(me);continue}else if(!this.duplicateOdd){this.layers[ie].push(oe[ue]);continue}}const le=oe[ue],ce=ue+1===oe.length?le:oe[ue+1];let de=null;this.isBitcoinTree?de=[u.default(le),u.default(ce)]:de=[le,ce],this.sortPairs&&de.sort(t.Buffer.compare);let fe=this.hashFn(this.concatenator(de));this.isBitcoinTree&&(fe=u.default(this.hashFn(fe))),this.layers[ie].push(fe)}oe=this.layers[ie]}}addLeaf(oe,ie=!1){ie&&(oe=this.hashFn(oe)),this.processLeaves(this.leaves.concat(oe))}addLeaves(oe,ie=!1){ie&&(oe=oe.map(this.hashFn)),this.processLeaves(this.leaves.concat(oe))}getLeaves(oe){return Array.isArray(oe)?(this.hashLeaves&&(oe=oe.map(this.hashFn),this.sortLeaves&&(oe=oe.sort(t.Buffer.compare))),this.leaves.filter(ie=>this.bufferIndexOf(oe,ie,this.sortLeaves)!==-1)):this.leaves}getLeaf(oe){return oe<0||oe>this.leaves.length-1?t.Buffer.from([]):this.leaves[oe]}getLeafIndex(oe){oe=this.bufferify(oe);const ie=this.getLeaves();for(let se=0;se<ie.length;se++)if(ie[se].equals(oe))return se;return-1}getLeafCount(){return this.leaves.length}getHexLeaves(){return this.leaves.map(oe=>this.bufferToHex(oe))}static marshalLeaves(oe){return JSON.stringify(oe.map(ie=>Za.bufferToHex(ie)),null,2)}static unmarshalLeaves(oe){let ie=null;if(typeof oe=="string")ie=JSON.parse(oe);else if(oe instanceof Object)ie=oe;else throw new Error("Expected type of string or object");if(!ie)return[];if(!Array.isArray(ie))throw new Error("Expected JSON string to be array");return ie.map(Za.bufferify)}getLayers(){return this.layers}getHexLayers(){return this.layers.reduce((oe,ie)=>(Array.isArray(ie)?oe.push(ie.map(se=>this.bufferToHex(se))):oe.push(ie),oe),[])}getLayersFlat(){const oe=this.layers.reduce((ie,se)=>(Array.isArray(se)?ie.unshift(...se):ie.unshift(se),ie),[]);return oe.unshift(t.Buffer.from([0])),oe}getHexLayersFlat(){return this.getLayersFlat().map(oe=>this.bufferToHex(oe))}getLayerCount(){return this.getLayers().length}getRoot(){return this.layers.length===0?t.Buffer.from([]):this.layers[this.layers.length-1][0]||t.Buffer.from([])}getHexRoot(){return this.bufferToHex(this.getRoot())}getProof(oe,ie){if(typeof oe>"u")throw new Error("leaf is required");oe=this.bufferify(oe);const se=[];if(!Number.isInteger(ie)){ie=-1;for(let ue=0;ue<this.leaves.length;ue++)t.Buffer.compare(oe,this.leaves[ue])===0&&(ie=ue)}if(ie<=-1)return[];for(let ue=0;ue<this.layers.length;ue++){const le=this.layers[ue],ce=ie%2,de=ce?ie-1:this.isBitcoinTree&&ie===le.length-1&&ue<this.layers.length-1?ie:ie+1;de<le.length&&se.push({position:ce?"left":"right",data:le[de]}),ie=ie/2|0}return se}getHexProof(oe,ie){return this.getProof(oe,ie).map(se=>this.bufferToHex(se.data))}getProofs(){const oe=[],ie=[];return this.getProofsDFS(this.layers.length-1,0,oe,ie),ie}getProofsDFS(oe,ie,se,ue){const le=ie%2;if(oe===-1){le||ue.push([...se].reverse());return}if(ie>=this.layers[oe].length)return;const ce=this.layers[oe],de=le?ie-1:ie+1;let fe=!1;de<ce.length&&(fe=!0,se.push({position:le?"left":"right",data:ce[de]}));const pe=ie*2,me=ie*2+1;this.getProofsDFS(oe-1,pe,se,ue),this.getProofsDFS(oe-1,me,se,ue),fe&&se.splice(se.length-1,1)}getHexProofs(){return this.getProofs().map(oe=>this.bufferToHex(oe.data))}getPositionalHexProof(oe,ie){return this.getProof(oe,ie).map(se=>[se.position==="left"?0:1,this.bufferToHex(se.data)])}static marshalProof(oe){const ie=oe.map(se=>typeof se=="string"?se:t.Buffer.isBuffer(se)?Za.bufferToHex(se):{position:se.position,data:Za.bufferToHex(se.data)});return JSON.stringify(ie,null,2)}static unmarshalProof(oe){let ie=null;if(typeof oe=="string")ie=JSON.parse(oe);else if(oe instanceof Object)ie=oe;else throw new Error("Expected type of string or object");if(!ie)return[];if(!Array.isArray(ie))throw new Error("Expected JSON string to be array");return ie.map(se=>{if(typeof se=="string")return Za.bufferify(se);if(se instanceof Object)return{position:se.position,data:Za.bufferify(se.data)};throw new Error("Expected item to be of type string or object")})}static marshalTree(oe){const ie=oe.getHexRoot(),se=oe.leaves.map(ce=>Za.bufferToHex(ce)),ue=oe.getHexLayers(),le=oe.getOptions();return JSON.stringify({options:le,root:ie,layers:ue,leaves:se},null,2)}static unmarshalTree(oe,ie=c.default,se={}){let ue=null;if(typeof oe=="string")ue=JSON.parse(oe);else if(oe instanceof Object)ue=oe;else throw new Error("Expected type of string or object");if(!ue)throw new Error("could not parse json");return se=Object.assign({},ue.options||{},se),new Za(ue.leaves,ie,se)}getProofIndices(oe,ie){const se=Math.pow(2,ie);let ue=new Set;for(const pe of oe){let me=se+pe;for(;me>1;)ue.add(me^1),me=me/2|0}const le=oe.map(pe=>se+pe),ce=Array.from(ue).sort((pe,me)=>pe-me).reverse();ue=le.concat(ce);const de=new Set,fe=[];for(let pe of ue)if(!de.has(pe))for(fe.push(pe);pe>1&&(de.add(pe),!!de.has(pe^1));)pe=pe/2|0;return fe.filter(pe=>!oe.includes(pe-se))}getProofIndicesForUnevenTree(oe,ie){const se=Math.ceil(Math.log2(ie)),ue=[];for(let de=0;de<se;de++)ie%2!==0&&ue.push({index:de,leavesCount:ie}),ie=Math.ceil(ie/2);const le=[];let ce=oe;for(let de=0;de<se;de++){let pe=ce.map(ge=>ge%2===0?ge+1:ge-1).filter(ge=>!ce.includes(ge));const me=ue.find(({index:ge})=>ge===de);me&&ce.includes(me.leavesCount-1)&&(pe=pe.slice(0,-1)),le.push(pe),ce=[...new Set(ce.map(ge=>ge%2===0?ge/2:ge%2===0?(ge+1)/2:(ge-1)/2))]}return le}getMultiProof(oe,ie){if(this.complete||console.warn("Warning: For correct multiProofs it's strongly recommended to set complete: true"),ie||(ie=oe,oe=this.getLayersFlat()),this.isUnevenTree()&&ie.every(Number.isInteger))return this.getMultiProofForUnevenTree(ie);if(!ie.every(Number.isInteger)){let ue=ie;this.sortPairs&&(ue=ue.sort(t.Buffer.compare));let le=ue.map(pe=>this.bufferIndexOf(this.leaves,pe,this.sortLeaves)).sort((pe,me)=>pe===me?0:pe>me?1:-1);if(!le.every(pe=>pe!==-1))throw new Error("Element does not exist in Merkle tree");const ce=[],de=[];let fe=[];for(let pe=0;pe<this.layers.length;pe++){const me=this.layers[pe];for(let ge=0;ge<le.length;ge++){const De=le[ge],Ce=this.getPairNode(me,De);ce.push(me[De]),Ce&&de.push(Ce),fe.push(De/2|0)}le=fe.filter((ge,De,Ce)=>Ce.indexOf(ge)===De),fe=[]}return de.filter(pe=>!ce.includes(pe))}return this.getProofIndices(ie,Math.log2(oe.length/2|0)).map(ue=>oe[ue])}getMultiProofForUnevenTree(oe,ie){ie||(ie=oe,oe=this.getLayers());let se=[],ue=ie;for(const le of oe){const ce=[];for(const fe of ue){if(fe%2===0){const me=fe+1;if(!ue.includes(me)&&le[me]){ce.push(le[me]);continue}}const pe=fe-1;if(!ue.includes(pe)&&le[pe]){ce.push(le[pe]);continue}}se=se.concat(ce);const de=new Set;for(const fe of ue){if(fe%2===0){de.add(fe/2);continue}if(fe%2===0){de.add((fe+1)/2);continue}de.add((fe-1)/2)}ue=Array.from(de)}return se}getHexMultiProof(oe,ie){return this.getMultiProof(oe,ie).map(se=>this.bufferToHex(se))}getProofFlags(oe,ie){if(!Array.isArray(oe)||oe.length<=0)throw new Error("Invalid Inputs!");let se;if(oe.every(Number.isInteger)?se=[...oe].sort((de,fe)=>de===fe?0:de>fe?1:-1):se=oe.map(de=>this.bufferIndexOf(this.leaves,de,this.sortLeaves)).sort((de,fe)=>de===fe?0:de>fe?1:-1),!se.every(de=>de!==-1))throw new Error("Element does not exist in Merkle tree");const ue=ie.map(de=>this.bufferify(de)),le=[],ce=[];for(let de=0;de<this.layers.length;de++){const fe=this.layers[de];se=se.reduce((pe,me)=>{if(!le.includes(fe[me])){const De=this.getPairNode(fe,me),Ce=ue.includes(fe[me])||ue.includes(De);De&&ce.push(!Ce),le.push(fe[me]),le.push(De)}return pe.push(me/2|0),pe},[])}return ce}verify(oe,ie,se){let ue=this.bufferify(ie);if(se=this.bufferify(se),!Array.isArray(oe)||!ie||!se)return!1;for(let le=0;le<oe.length;le++){const ce=oe[le];let de=null,fe=null;if(typeof ce=="string")de=this.bufferify(ce),fe=!0;else if(Array.isArray(ce))fe=ce[0]===0,de=this.bufferify(ce[1]);else if(t.Buffer.isBuffer(ce))de=ce,fe=!0;else if(ce instanceof Object)de=this.bufferify(ce.data),fe=ce.position==="left";else throw new Error("Expected node to be of type string or object");const pe=[];this.isBitcoinTree?(pe.push(u.default(ue)),pe[fe?"unshift":"push"](u.default(de)),ue=this.hashFn(this.concatenator(pe)),ue=u.default(this.hashFn(ue))):this.sortPairs?t.Buffer.compare(ue,de)===-1?(pe.push(ue,de),ue=this.hashFn(this.concatenator(pe))):(pe.push(de,ue),ue=this.hashFn(this.concatenator(pe))):(pe.push(ue),pe[fe?"unshift":"push"](de),ue=this.hashFn(this.concatenator(pe)))}return t.Buffer.compare(ue,se)===0}verifyMultiProof(oe,ie,se,ue,le){if(this.isUnevenTree())return this.verifyMultiProofForUnevenTree(oe,ie,se,ue,le);const de=Math.ceil(Math.log2(ue));oe=this.bufferify(oe),se=se.map(ge=>this.bufferify(ge)),le=le.map(ge=>this.bufferify(ge));const fe={};for(const[ge,De]of this.zip(ie,se))fe[Math.pow(2,de)+ge]=De;for(const[ge,De]of this.zip(this.getProofIndices(ie,de),le))fe[ge]=De;let pe=Object.keys(fe).map(ge=>+ge).sort((ge,De)=>ge-De);pe=pe.slice(0,pe.length-1);let me=0;for(;me<pe.length;){const ge=pe[me];if(ge>=2&&{}.hasOwnProperty.call(fe,ge^1)){let De=[fe[ge-ge%2],fe[ge-ge%2+1]];this.sortPairs&&(De=De.sort(t.Buffer.compare));const Ce=De[1]?this.hashFn(this.concatenator(De)):De[0];fe[ge/2|0]=Ce,pe.push(ge/2|0)}me+=1}return!ie.length||{}.hasOwnProperty.call(fe,1)&&fe[1].equals(oe)}verifyMultiProofWithFlags(oe,ie,se,ue){oe=this.bufferify(oe),ie=ie.map(this.bufferify),se=se.map(this.bufferify);const le=ie.length,ce=ue.length,de=[];let fe=0,pe=0,me=0;for(let ge=0;ge<ce;ge++){const De=ue[ge]?fe<le?ie[fe++]:de[pe++]:se[me++],Ce=fe<le?ie[fe++]:de[pe++],we=[De,Ce].sort(t.Buffer.compare);de[ge]=this.hashFn(this.concatenator(we))}return t.Buffer.compare(de[ce-1],oe)===0}verifyMultiProofForUnevenTree(oe,ie,se,ue,le){oe=this.bufferify(oe),se=se.map(de=>this.bufferify(de)),le=le.map(de=>this.bufferify(de));const ce=this.calculateRootForUnevenTree(ie,se,ue,le);return oe.equals(ce)}getDepth(){return this.getLayers().length-1}getLayersAsObject(){const oe=this.getLayers().map(se=>se.map(ue=>this.bufferToHex(ue,!1))),ie=[];for(let se=0;se<oe.length;se++){const ue=[];for(let le=0;le<oe[se].length;le++){const ce={[oe[se][le]]:null};if(ie.length){ce[oe[se][le]]={};const de=ie.shift(),fe=Object.keys(de)[0];if(ce[oe[se][le]][fe]=de[fe],ie.length){const pe=ie.shift(),me=Object.keys(pe)[0];ce[oe[se][le]][me]=pe[me]}}ue.push(ce)}ie.push(...ue)}return ie[0]}static verify(oe,ie,se,ue=c.default,le={}){return new Za([],ue,le).verify(oe,ie,se)}static getMultiProof(oe,ie){return new Za([]).getMultiProof(oe,ie)}resetTree(){this.leaves=[],this.layers=[]}getPairNode(oe,ie){const se=ie%2===0?ie+1:ie-1;return se<oe.length?oe[se]:null}toTreeString(){const oe=this.getLayersAsObject();return ee.default.asTree(oe,!0)}toString(){return this.toTreeString()}isUnevenTree(oe){const ie=(oe==null?void 0:oe.length)||this.getDepth();return!this.isPowOf2(ie)}isPowOf2(oe){return oe&&!(oe&oe-1)}calculateRootForUnevenTree(oe,ie,se,ue){const le=this.zip(oe,ie).sort(([ge],[De])=>ge-De),ce=le.map(([ge])=>ge),de=this.getProofIndicesForUnevenTree(ce,se);let fe=0;const pe=[];for(let ge=0;ge<de.length;ge++){const De=de[ge],Ce=fe;fe+=De.length,pe[ge]=this.zip(De,ue.slice(Ce,fe))}const me=[le];for(let ge=0;ge<pe.length;ge++){const De=pe[ge].concat(me[ge]).sort(([Re],[Be])=>Re-Be).map(([,Re])=>Re),Ce=me[ge].map(([Re])=>Re),we=[...new Set(Ce.map(Re=>Re%2===0?Re/2:Re%2===0?(Re+1)/2:(Re-1)/2))],xe=[];for(let Re=0;Re<we.length;Re++){const Be=we[Re],Se=De[Re*2],Te=De[Re*2+1],Ae=Te?this.hashFn(this.concatenator([Se,Te])):Se;xe.push([Be,Ae])}me.push(xe)}return me[me.length-1][0][1]}};return MerkleTree.MerkleTree=ae,typeof window<"u"&&(window.MerkleTree=ae),MerkleTree.default=ae,MerkleTree}var MerkleMountainRange={},hasRequiredMerkleMountainRange;function requireMerkleMountainRange(){if(hasRequiredMerkleMountainRange)return MerkleMountainRange;hasRequiredMerkleMountainRange=1;var n=MerkleMountainRange&&MerkleMountainRange.__importDefault||function(te){return te&&te.__esModule?te:{default:te}};Object.defineProperty(MerkleMountainRange,"__esModule",{value:!0}),MerkleMountainRange.MerkleMountainRange=void 0;const t=requireDist$5(),u=n(requireSha256$1()),c=n(requireBase());let ee=class extends c.default{constructor(ae=u.default,ne=[],oe,ie,se){super(),this.root=t.Buffer.alloc(0),this.size=0,this.width=0,this.hashes={},this.data={},ne=ne.map(this.bufferify),this.hashFn=this.bufferifyFn(ae),this.hashLeafFn=oe,this.peakBaggingFn=ie,this.hashBranchFn=se;for(const ue of ne)this.append(ue)}append(ae){ae=this.bufferify(ae);const ne=this.hashFn(ae),oe=this.bufferToHex(ne);(!this.data[oe]||this.bufferToHex(this.hashFn(this.data[oe]))!==oe)&&(this.data[oe]=ae);const ie=this.hashLeaf(this.size+1,ne);this.hashes[this.size+1]=ie,this.width+=1;const se=this.getPeakIndexes(this.width);this.size=this.getSize(this.width);const ue=[];for(let le=0;le<se.length;le++)ue[le]=this._getOrCreateNode(se[le]);this.root=this.peakBagging(this.width,ue)}hashLeaf(ae,ne){return ne=this.bufferify(ne),this.hashLeafFn?this.bufferify(this.hashLeafFn(ae,ne)):this.hashFn(t.Buffer.concat([this.bufferify(ae),ne]))}hashBranch(ae,ne,oe){return this.hashBranchFn?this.bufferify(this.hashBranchFn(ae,ne,oe)):this.hashFn(t.Buffer.concat([this.bufferify(ae),this.bufferify(ne),this.bufferify(oe)]))}getPeaks(){const ae=this.getPeakIndexes(this.width),ne=[];for(let oe=0;oe<ae.length;oe++)ne[oe]=this.hashes[ae[oe]];return ne}getLeafIndex(ae){return ae%2===1?this.getSize(ae):this.getSize(ae-1)+1}getPeakIndexes(ae){const ne=this.numOfPeaks(ae),oe=[];let ie=0,se=0;for(let ue=255;ue>0&&!(ae&1<<ue-1&&(se=se+(1<<ue)-1,oe[ie++]=se,oe.length>=ne));ue--);if(ie!==oe.length)throw new Error("invalid bit calculation");return oe}numOfPeaks(ae){let ne=ae,oe=0;for(;ne>0;)ne%2===1&&oe++,ne=ne>>1;return oe}peakBagging(ae,ne){const oe=this.getSize(ae);if(this.numOfPeaks(ae)!==ne.length)throw new Error("received invalid number of peaks");return ae===0&&!ne.length?t.Buffer.alloc(0):this.peakBaggingFn?this.bufferify(this.peakBaggingFn(oe,ne)):this.hashFn(t.Buffer.concat([this.bufferify(oe),...ne.map(this.bufferify)]))}getSize(ae){return(ae<<1)-this.numOfPeaks(ae)}getRoot(){return this.root}getHexRoot(){return this.bufferToHex(this.getRoot())}getNode(ae){return this.hashes[ae]}mountainHeight(ae){let ne=1;for(;1<<ne<=ae+ne;)ne++;return ne-1}heightAt(ae){let ne=ae,oe=0,ie=0;for(;ne>oe;)ne-=(1<<ie)-1,ie=this.mountainHeight(ne),oe=(1<<ie)-1;return ie-(oe-ne)}isLeaf(ae){return this.heightAt(ae)===1}getChildren(ae){const ne=ae-(1<<this.heightAt(ae)-1),oe=ae-1;if(ne===oe)throw new Error("not a parent");return[ne,oe]}getMerkleProof(ae){if(ae>this.size)throw new Error("out of range");if(!this.isLeaf(ae))throw new Error("not a leaf");const ne=this.root,oe=this.width,ie=this.getPeakIndexes(this.width),se=[];let ue=0;for(let pe=0;pe<ie.length;pe++)se[pe]=this.hashes[ie[pe]],ie[pe]>=ae&&ue===0&&(ue=ie[pe]);let le=0,ce=0,de=this.heightAt(ue);const fe=[];for(;ue!==ae;)de--,[le,ce]=this.getChildren(ue),ue=ae<=le?le:ce,fe[de-1]=this.hashes[ae<=le?ce:le];return{root:ne,width:oe,peakBagging:se,siblings:fe}}verify(ae,ne,oe,ie,se,ue){if(ie=this.bufferify(ie),this.getSize(ne)<oe)throw new Error("index is out of range");if(!ae.equals(this.peakBagging(ne,se)))throw new Error("invalid root hash from the peaks");let ce=0,de;const fe=this.getPeakIndexes(ne);for(let we=0;we<fe.length;we++)if(fe[we]>=oe){de=se[we],ce=fe[we];break}if(!de)throw new Error("target not found");let pe=ue.length+1;const me=new Array(pe);let ge=0,De=0;for(;pe>0&&(me[--pe]=ce,ce!==oe);)[ge,De]=this.getChildren(ce),ce=oe>ge?De:ge;let Ce;for(;pe<me.length;)ce=me[pe],pe===0?Ce=this.hashLeaf(ce,this.hashFn(ie)):ce-1===me[pe-1]?Ce=this.hashBranch(ce,ue[pe-1],Ce):Ce=this.hashBranch(ce,Ce,ue[pe-1]),pe++;if(!Ce.equals(de))throw new Error("hashed peak is invalid");return!0}peaksToPeakMap(ae,ne){const oe={};let ie=0,se=0,ue=ne.length;for(let le=1;le<=32;le++)ie=32-le,se=1<<le-1,ae&se?oe[ie]=ne[--ue]:oe[ie]=0;if(ue!==0)throw new Error("invalid number of peaks");return oe}peakMapToPeaks(ae,ne){const oe=this.numOfPeaks(ae),ie=new Array(oe);let se=0;for(let ue=0;ue<32;ue++)ne[ue]!==0&&(ie[se++]=ne[ue]);if(se!==oe)throw new Error("invalid number of peaks");return ie}peakUpdate(ae,ne,oe){const ie={},se=ae+1;let ue=this.getLeafIndex(se),le=this.hashLeaf(ue,oe),ce=0,de=0,fe=!1,pe=!1,me=!1;for(let ge=1;ge<=32;ge++)ce=32-ge,me?ie[ce]=ne[ce]:(de=1<<ge-1,fe=(ae&de)!==0,pe=(se&de)!==0,ue++,fe&&(le=this.hashBranch(ue,ne[ce],le)),pe?(fe?ie[ce]=ne[ce]:ie[ce]=le,me=!0):ie[ce]=0);return ie}rollUp(ae,ne,oe,ie){if(!ae.equals(this.peakBagging(ne,oe)))throw new Error("invalid root hash from the peaks");let se=ne,ue=this.peaksToPeakMap(ne,oe);for(let le=0;le<ie.length;le++)ue=this.peakUpdate(se,ue,ie[le]),se++;return this.peakBagging(se,this.peakMapToPeaks(se,ue))}_getOrCreateNode(ae){if(ae>this.size)throw new Error("out of range");if(!this.hashes[ae]){const[ne,oe]=this.getChildren(ae),ie=this._getOrCreateNode(ne),se=this._getOrCreateNode(oe);this.hashes[ae]=this.hashBranch(ae,ie,se)}return this.hashes[ae]}};return MerkleMountainRange.MerkleMountainRange=ee,typeof window<"u"&&(window.MerkleMountainRange=ee),MerkleMountainRange.default=ee,MerkleMountainRange}var IncrementalMerkleTree={},hasRequiredIncrementalMerkleTree;function requireIncrementalMerkleTree(){if(hasRequiredIncrementalMerkleTree)return IncrementalMerkleTree;hasRequiredIncrementalMerkleTree=1;var n=IncrementalMerkleTree&&IncrementalMerkleTree.__importDefault||function(ee){return ee&&ee.__esModule?ee:{default:ee}};Object.defineProperty(IncrementalMerkleTree,"__esModule",{value:!0}),IncrementalMerkleTree.IncrementalMerkleTree=void 0;const t=n(requireBase()),u=n(requireTreeify());let c=class extends t.default{constructor(te,ae){if(super(),this.hashFn=te,ae.depth&&(this.depth=ae.depth),ae.arity&&(this.arity=ae.arity),this.depth<1)throw new Error("depth must be greater than 0");if(this.arity<1)throw new Error("arity must be greater than 0");const ne=[];let oe=ae.zeroValue;if(this.zeroValue=oe,this.zeroes=[],this.depth)for(let ie=0;ie<this.depth;ie++)this.zeroes.push(oe),ne[ie]=[],oe=this.hashFn(Array(this.arity).fill(oe));this.nodes=ne,this.root=oe}getRoot(){return this.root}getHexRoot(){return this.bufferToHex(this.bufferify(this.getRoot()))}insert(te){if(this.depth&&this.arity&&this.nodes[0].length>=this.getMaxLeaves())throw new Error("tree is full");let ae=te,ne=this.nodes[0].length;for(let oe=0;oe<this.depth;oe+=1){const ie=ne%this.arity,se=ne-ie,ue=se+this.arity,le=[];this.nodes[oe][ne]=ae;for(let ce=se;ce<ue;ce+=1)ce<this.nodes[oe].length?le.push(this.nodes[oe][ce]):le.push(this.zeroes[oe]);ae=this.hashFn(le),ne=Math.floor(ne/this.arity)}this.root=ae}delete(te){this.update(te,this.zeroValue)}update(te,ae){if(te<0||te>=this.nodes[0].length)throw new Error("out of bounds");let ne=ae;for(let oe=0;oe<this.depth;oe+=1){const ie=te%this.arity,se=te-ie,ue=se+this.arity,le=[];this.nodes[oe][te]=ne;for(let ce=se;ce<ue;ce+=1)ce<this.nodes[oe].length?le.push(this.nodes[oe][ce]):le.push(this.zeroes[oe]);ne=this.hashFn(le),te=Math.floor(te/this.arity)}this.root=ne}getDepth(){return this.depth}getArity(){return this.arity}getMaxLeaves(){return Math.pow(this.depth,this.arity)}indexOf(te){return this.nodes[0].indexOf(te)}getLeaves(){const te=this.copyList(this.nodes[0]),ae=this.nodes[0].length;for(let ne=ae;ne<this.getMaxLeaves();ne++)te[ne]=this.zeroValue;return te}copyList(te){return te.map(ae=>BigInt(ae))}getLayers(){const te=[];for(const ae of this.nodes)te.push(this.copyList(ae));if(te[0].length<this.getMaxLeaves()){let ae=te[0].length;for(let ne=ae;ne<this.getMaxLeaves();ne++)te[0][ne]=this.zeroValue;for(let ne=0;ne<this.depth;ne++){const oe=ae%this.arity,ie=ae-oe,se=ie+this.arity;for(let ue=ie;ue<se;ue++)ue>=te[ne].length&&(te[ne][ue]=this.zeroes[ne]);ae=Math.floor(ae/this.arity)}}return te.push([this.root]),te}getHexLayers(){return this.getLayers().reduce((te,ae)=>(Array.isArray(ae)?te.push(ae.map(ne=>this.bufferToHex(this.bufferify(ne)))):te.push(ae),te),[])}getLayersAsObject(){const te=this.getLayers().map(ne=>ne.map(oe=>this.bufferToHex(this.bufferify(oe),!1))),ae=[];for(let ne=0;ne<te.length;ne++){const oe=[];for(let ie=0;ie<te[ne].length;ie++){const se={[te[ne][ie]]:null};if(ae.length){se[te[ne][ie]]={};const ue=ae.shift(),le=Object.keys(ue)[0];if(se[te[ne][ie]][le]=ue[le],ae.length){const ce=ae.shift(),de=Object.keys(ce)[0];se[te[ne][ie]][de]=ce[de]}}oe.push(se)}ae.push(...oe)}return ae[0]}computeRoot(){let te,ae=this.nodes[0].length;for(let ne=0;ne<this.depth;ne+=1){const oe=ae%this.arity,ie=ae-oe,se=ie+this.arity,ue=[];for(let le=ie;le<se;le+=1)le<this.nodes[ne].length?ue.push(this.nodes[ne][le]):ue.push(this.zeroes[ne]);te=this.hashFn(ue),ae=Math.floor(ae/this.arity)}return te}getProof(te){if(te<0||te>=this.nodes[0].length)throw new Error("The leaf does not exist in this tree");const ae=[],ne=[],oe=te;for(let ie=0;ie<this.depth;ie+=1){const se=te%this.arity,ue=te-se,le=ue+this.arity;ne[ie]=se,ae[ie]=[];for(let ce=ue;ce<le;ce+=1)ce!==te&&(ce<this.nodes[ie].length?ae[ie].push(this.nodes[ie][ce]):ae[ie].push(this.zeroes[ie]));te=Math.floor(te/this.arity)}return{root:this.root,leaf:this.nodes[0][oe],pathIndices:ne,siblings:ae}}verify(te){let ae=te.leaf;for(let ne=0;ne<te.siblings.length;ne+=1){const oe=te.siblings[ne].slice();oe.splice(te.pathIndices[ne],0,ae),ae=this.hashFn(oe)}return te.root===ae}toString(){return this.toTreeString()}toTreeString(){const te=this.getLayersAsObject();return u.default.asTree(te,!0)}};return IncrementalMerkleTree.IncrementalMerkleTree=c,typeof window<"u"&&(window.IncrementalMerkleTree=c),IncrementalMerkleTree.default=c,IncrementalMerkleTree}var MerkleSumTree={},hasRequiredMerkleSumTree;function requireMerkleSumTree(){if(hasRequiredMerkleSumTree)return MerkleSumTree;hasRequiredMerkleSumTree=1,Object.defineProperty(MerkleSumTree,"__esModule",{value:!0}),MerkleSumTree.MerkleSumTree=MerkleSumTree.ProofStep=MerkleSumTree.Leaf=MerkleSumTree.Bucket=void 0;const n=requireBase();class t{constructor(ae,ne){this.size=BigInt(ae),this.hashed=ne,this.parent=null,this.left=null,this.right=null}}MerkleSumTree.Bucket=t;class u{constructor(ae,ne,oe){this.hashFn=ae,this.rng=ne.map(ie=>BigInt(ie)),this.data=oe}getBucket(){let ae;return this.data?ae=this.hashFn(this.data):ae=Buffer.alloc(32),new t(BigInt(this.rng[1])-BigInt(this.rng[0]),ae)}}MerkleSumTree.Leaf=u;class c{constructor(ae,ne){this.bucket=ae,this.right=ne}}MerkleSumTree.ProofStep=c;let ee=class Zi extends n.Base{constructor(ae,ne){super(),this.leaves=ae,this.hashFn=ne,Zi.checkConsecutive(ae),this.buckets=[];for(const ie of ae)this.buckets.push(ie.getBucket());let oe=[];for(const ie of this.buckets)oe.push(ie);for(;oe.length!==1;){const ie=[];for(;oe.length;)if(oe.length>=2){const se=oe.shift(),ue=oe.shift(),le=se.size+ue.size,ce=this.hashFn(Buffer.concat([this.sizeToBuffer(se.size),this.bufferify(se.hashed),this.sizeToBuffer(ue.size),this.bufferify(ue.hashed)])),de=new t(le,ce);ue.parent=de,se.parent=ue.parent,se.right=ue,ue.left=se,ie.push(de)}else ie.push(oe.shift());oe=ie}this.root=oe[0]}sizeToBuffer(ae){const ne=Buffer.alloc(8);return new DataView(ne.buffer).setBigInt64(0,BigInt(ae),!1),ne}static checkConsecutive(ae){let ne=BigInt(0);for(const oe of ae){if(oe.rng[0]!==ne)throw new Error("leaf ranges are invalid");ne=BigInt(oe.rng[1])}}getProof(ae){let ne=this.buckets[Number(ae)];const oe=[];for(;ne&&ne.parent;){const ie=!!ne.right,se=ne.right?ne.right:ne.left;ne=ne.parent,oe.push(new c(se,ie))}return oe}sum(ae){let ne=BigInt(0);for(const oe of ae)ne+=BigInt(oe);return ne}verifyProof(ae,ne,oe){const ie=[this.sum(oe.filter(le=>!le.right).map(le=>le.bucket.size)),BigInt(ae.size)-this.sum(oe.filter(le=>le.right).map(le=>le.bucket.size))];if(!(ie[0]===ne.rng[0]&&ie[1]===ne.rng[1]))return!1;let se=ne.getBucket(),ue;for(const le of oe)le.right?ue=this.hashFn(Buffer.concat([this.sizeToBuffer(se.size),this.bufferify(se.hashed),this.sizeToBuffer(le.bucket.size),this.bufferify(le.bucket.hashed)])):ue=this.hashFn(Buffer.concat([this.sizeToBuffer(le.bucket.size),this.bufferify(le.bucket.hashed),this.sizeToBuffer(se.size),this.bufferify(se.hashed)])),se=new t(BigInt(se.size)+BigInt(le.bucket.size),ue);return se.size===ae.size&&se.hashed.toString("hex")===ae.hashed.toString("hex")}};return MerkleSumTree.MerkleSumTree=ee,typeof window<"u"&&(window.MerkleSumTree=ee),MerkleSumTree.default=ee,MerkleSumTree}var hasRequiredDist;function requireDist(){return hasRequiredDist||(hasRequiredDist=1,function(n){var t=dist&&dist.__importDefault||function(ae){return ae&&ae.__esModule?ae:{default:ae}};Object.defineProperty(n,"__esModule",{value:!0}),n.MerkleTree=void 0;const u=t(requireMerkleTree());n.MerkleTree=u.default;var c=requireMerkleMountainRange();Object.defineProperty(n,"MerkleMountainRange",{enumerable:!0,get:function(){return c.MerkleMountainRange}});var ee=requireIncrementalMerkleTree();Object.defineProperty(n,"IncrementalMerkleTree",{enumerable:!0,get:function(){return ee.IncrementalMerkleTree}});var te=requireMerkleSumTree();Object.defineProperty(n,"MerkleSumTree",{enumerable:!0,get:function(){return te.MerkleSumTree}}),n.default=u.default}(dist)),dist}var hasRequiredMerkle;function requireMerkle(){return hasRequiredMerkle||(hasRequiredMerkle=1,function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.getMerkleProofAtIndex=n.getMerkleProof=n.getMerkleRoot=void 0;const t=requireCjs(),u=requireSha3$3(),c=requireDist(),ee=(oe,ie)=>new c.MerkleTree([...oe.map(se=>(0,t.publicKeyBytes)(se)),...Array(2**ie-oe.length).fill(0).map(()=>new Uint8Array(32).fill(0))],u.keccak_256),te=(oe,ie)=>(0,t.publicKey)(ee(oe,ie).getRoot());n.getMerkleRoot=te;const ae=(oe,ie,se,ue)=>ee(oe,ie).getProof(Buffer.from((0,t.publicKeyBytes)(se)),ue).map(le=>(0,t.publicKey)(le.data));n.getMerkleProof=ae;const ne=(oe,ie,se)=>(0,n.getMerkleProof)(oe,ie,oe[se],se);n.getMerkleProofAtIndex=ne}(merkle)),merkle}var plugin$1={},src={},decorator={},errors={},hasRequiredErrors;function requireErrors(){if(hasRequiredErrors)return errors;hasRequiredErrors=1,Object.defineProperty(errors,"__esModule",{value:!0}),errors.DasApiError=void 0;class n extends Error{constructor(){super(...arguments),this.name="DasApiError"}}return errors.DasApiError=n,errors}var hasRequiredDecorator;function requireDecorator(){if(hasRequiredDecorator)return decorator;hasRequiredDecorator=1,Object.defineProperty(decorator,"__esModule",{value:!0}),decorator.createDasApiDecorator=void 0;const n=requireErrors(),t=u=>({...u,getAsset:async c=>{const ee=await u.call("getAsset",[c]);if(!ee)throw new n.DasApiError(`Asset not found: ${c}`);return ee},getAssets:async c=>{const ee=await u.call("getAssets",[c]);if(!ee)throw new n.DasApiError(`No assets found: ${c}`);return ee},getAssetProof:async c=>{const ee=await u.call("getAssetProof",[c]);if(!ee)throw new n.DasApiError(`No proof found for asset: ${c}`);return ee},getAssetProofs:async c=>{const ee=await u.call("getAssetProofs",[c]);if(!ee)throw new n.DasApiError(`No proofs found for assets: ${c}`);return ee},getAssetsByAuthority:async c=>{if(typeof c.page=="number"&&(c.before||c.after))throw new n.DasApiError("Pagination Error. Please use either page or before/after, but not both.");const ee=await u.call("getAssetsByAuthority",[c.authority,c.sortBy??null,c.limit??null,c.page??1,c.before??null,c.after??null]);if(!ee)throw new n.DasApiError(`No assets found for authority: ${c.authority}`);return ee},getAssetsByCreator:async c=>{if(typeof c.page=="number"&&(c.before||c.after))throw new n.DasApiError("Pagination Error. Please use either page or before/after, but not both.");const ee=await u.call("getAssetsByCreator",[c.creator,c.onlyVerified,c.sortBy??null,c.limit??null,c.page??1,c.before??null,c.after??null]);if(!ee)throw new n.DasApiError(`No assets found for creator: ${c.creator}`);return ee},getAssetsByGroup:async c=>{if(typeof c.page=="number"&&(c.before||c.after))throw new n.DasApiError("Pagination Error. Please use either page or before/after, but not both.");const ee=await u.call("getAssetsByGroup",[c.groupKey,c.groupValue,c.sortBy??null,c.limit??null,c.page??1,c.before??null,c.after??null]);if(!ee)throw new n.DasApiError(`No assets found for group: ${c.groupKey} => ${c.groupValue}`);return ee},getAssetsByOwner:async c=>{if(typeof c.page=="number"&&(c.before||c.after))throw new n.DasApiError("Pagination Error. Please use either page or before/after, but not both.");const ee=await u.call("getAssetsByOwner",[c.owner,c.sortBy??null,c.limit??null,c.page??1,c.before??null,c.after??null]);if(!ee)throw new n.DasApiError(`No assets found for owner: ${c.owner}`);return ee},searchAssets:async c=>{if(typeof c.page=="number"&&(c.before||c.after))throw new n.DasApiError("Pagination Error. Please use either page or before/after, but not both.");const ee=await u.call("searchAssets",[c.negate??null,c.conditionType??null,c.interface??null,c.owner??null,c.ownerType??null,c.creator??null,c.creatorVerified??null,c.authority??null,c.grouping??null,c.delegate??null,c.frozen??null,c.supply??null,c.supplyMint??null,c.compressed??null,c.compressible??null,c.royaltyModel??null,c.royaltyTarget??null,c.royaltyAmount??null,c.burnt??null,c.sortBy??null,c.limit??null,c.page??1,c.before??null,c.after??null,c.jsonUri??null]);if(!ee)throw new n.DasApiError("No assets found for the given search criteria");return ee},getAssetSignatures:async c=>{const ee=await u.call("getAssetSignaturesV2",[c]);if(!ee)throw new n.DasApiError(`No signatures found for asset: ${c}`);return ee}});return decorator.createDasApiDecorator=t,decorator}var plugin={},hasRequiredPlugin$1;function requirePlugin$1(){if(hasRequiredPlugin$1)return plugin;hasRequiredPlugin$1=1,Object.defineProperty(plugin,"__esModule",{value:!0}),plugin.dasApi=void 0;const n=requireDecorator(),t=()=>({install(u){u.rpc=(0,n.createDasApiDecorator)(u.rpc)}});return plugin.dasApi=t,plugin}var types={},hasRequiredTypes;function requireTypes(){return hasRequiredTypes||(hasRequiredTypes=1,Object.defineProperty(types,"__esModule",{value:!0})),types}var hasRequiredSrc$1;function requireSrc$1(){return hasRequiredSrc$1||(hasRequiredSrc$1=1,function(n){var t=src&&src.__createBinding||(Object.create?function(c,ee,te,ae){ae===void 0&&(ae=te);var ne=Object.getOwnPropertyDescriptor(ee,te);(!ne||("get"in ne?!ee.__esModule:ne.writable||ne.configurable))&&(ne={enumerable:!0,get:function(){return ee[te]}}),Object.defineProperty(c,ae,ne)}:function(c,ee,te,ae){ae===void 0&&(ae=te),c[ae]=ee[te]}),u=src&&src.__exportStar||function(c,ee){for(var te in c)te!=="default"&&!Object.prototype.hasOwnProperty.call(ee,te)&&t(ee,c,te)};Object.defineProperty(n,"__esModule",{value:!0}),u(requireDecorator(),n),u(requireErrors(),n),u(requirePlugin$1(),n),u(requireTypes(),n)}(src)),src}var hasRequiredPlugin;function requirePlugin(){if(hasRequiredPlugin)return plugin$1;hasRequiredPlugin=1,Object.defineProperty(plugin$1,"__esModule",{value:!0}),plugin$1.mplBubblegum=void 0;const n=requireSrc$1(),t=requireGenerated(),u=()=>({install(c){c.use((0,n.dasApi)()),c.programs.add((0,t.createMplBubblegumProgram)(),!1),c.programs.add((0,t.createSplAccountCompressionProgram)(),!1),c.programs.add((0,t.createSplNoopProgram)(),!1)}});return plugin$1.mplBubblegum=u,plugin$1}var hasRequiredSrc;function requireSrc(){return hasRequiredSrc||(hasRequiredSrc=1,function(n){var t=src$4&&src$4.__createBinding||(Object.create?function(c,ee,te,ae){ae===void 0&&(ae=te);var ne=Object.getOwnPropertyDescriptor(ee,te);(!ne||("get"in ne?!ee.__esModule:ne.writable||ne.configurable))&&(ne={enumerable:!0,get:function(){return ee[te]}}),Object.defineProperty(c,ae,ne)}:function(c,ee,te,ae){ae===void 0&&(ae=te),c[ae]=ee[te]}),u=src$4&&src$4.__exportStar||function(c,ee){for(var te in c)te!=="default"&&!Object.prototype.hasOwnProperty.call(ee,te)&&t(ee,c,te)};Object.defineProperty(n,"__esModule",{value:!0}),u(requireCreateTree(),n),u(requireErrors$1(),n),u(requireGenerated(),n),u(requireGetAssetWithProof(),n),u(requireHash(),n),u(requireHooked$2(),n),u(requireLeafAssetId(),n),u(requireMerkle(),n),u(requirePlugin(),n)}(src$4)),src$4}var srcExports=requireSrc();const _hoisted_1={class:"container"},_hoisted_2={key:0,class:"send-transaction"},_hoisted_3={class:"send-transaction__buttons"},_hoisted_4={class:"send-transaction__buttons-cancel"},_hoisted_5={class:"send-transaction__buttons-send"},_sfc_main$1=defineComponent({__name:"index",props:{network:{type:Object,default:()=>({})},accountInfo:{type:Object,default:()=>({})}},setup(n){var Ze;const t=n,u=new SOLToken({icon:t.network.icon,symbol:"Loading",balance:"0",price:"0",name:"loading",contract:"0x0",decimals:t.network.decimals}),c=useRoute(),ee=useRouter(),te=ref(),ae=new GenericNameResolver,ne=ref(),oe=c.params.id,ie=JSON.parse(c.params.tokenData?c.params.tokenData:"{}"),se=ref(JSON.parse(c.params.isToken)),ue=ref([]),le=ref(u),ce=ref(""),de=ref(!0),fe=ref(0),pe=ref(),me=computed(()=>isValidDecimals(Ce.value,le.value.decimals)),ge=computed(()=>isNumericPositive(Ce.value)),De=computed(()=>!me.value||!ge.value?!1:libExports.toBN(le.value.balance??"0").gte(libExports.toBN(toBase(Ce.value??"0",le.value.decimals)))),Ce=computed(()=>ce.value&&ce.value!==""?ce.value:"0"),we=ref(!1),xe=ref(GasPriceTypes.ECONOMY),Re=ref(defaultGasCostVals),Be=ref(((Ze=t.accountInfo.selectedAccount)==null?void 0:Ze.address)??""),Se=ref(""),Te=ref(!0),Ae=ref({id:"",contract:"",image:"",name:"Loading",url:"",collectionName:"",type:NFTType.SolanaToken}),he=computed(()=>{const He=t.accountInfo.activeAccounts.findIndex(je=>je.address===Be.value);if(He!==-1){const je=t.accountInfo.activeBalances[He];if(je!=="~")return toBase(je,t.network.decimals)}return"0"});onMounted(async()=>{trackSendEvents(SendEventType.SendOpen,{network:t.network.name}),te.value=(await t.network.api()).api,ke().then(Ee)});const ve=computed(()=>{const He=Ce.value?libExports.numberToHex(toBase(Ce.value,le.value.decimals)):"0x0",je=se.value?le.value.contract:Ae.value.contract;return{from:Be.value,value:se.value?He:"0x1",to:Se.value,contract:je}}),ye=computed(()=>{if(se.value&&he.value&&le.value&&le.value.contract&&ce.value!==""&&isValidDecimals(Ce.value,le.value.decimals)){let He=libExports.toBN(he.value);if(le.value.contract===NATIVE_TOKEN_ADDRESS){const je=libExports.toBN(toBase(ce.value,le.value.decimals));He=He.sub(je)}return He=He.sub(libExports.toBN(toBase(Re.value[xe.value].nativeValue,t.network.decimals))),He}else if(!se.value&&he.value&&Ae.value.id){let He=libExports.toBN(he.value);return He=He.sub(libExports.toBN(toBase(Re.value[xe.value].nativeValue,t.network.decimals))),He}return libExports.toBN(0)}),be=computed(()=>fromBase(ye.value.abs().toString(),t.network.decimals)),_e=computed(()=>{var He;return((He=ue.value[0])==null?void 0:He.price)||"0"}),Me=computed(()=>new BigNumber$1(be.value.toString()).times(_e.value??"0").toFixed()),Ie=computed(()=>me.value?ge.value?!De.value&&ye.value.isNeg()?`Not enough funds. You are
      ~${formatFloatingPointValue(be.value).value}
      ${t.network.currencyName} ($ ${formatFiatValue(Me.value).value}) short.`:!t.network.isAddress(getAddress$1(Se.value))&&Se.value!==""?"Invalid to address.":se.value&&!isValidDecimals(Ce.value,le.value.decimals)?`Invalid decimals for ${le.value.symbol}.`:!se.value&&!Ae.value.id?"Invalid NFT selected.":new BigNumber$1(Ce.value).gt(Ht.value)?"Not enough balance.":"":"Invalid amount.":"Too many decimals."),Fe=He=>He.getEstimatedFee(te.value.web3).then(async je=>{const Ke=je+fe.value,Ge=()=>fromBase(Ke.toString(),t.network.decimals),Pt=ue.value[0].price||"0";Re.value[GasPriceTypes.ECONOMY]={nativeValue:Ge(),fiatValue:new BigNumber$1(Ge()).times(Pt).toString(),nativeSymbol:t.network.currencyName,fiatSymbol:"USD"},de.value=!0}).catch(()=>{de.value=!1}),Ee=async()=>{Oe()},ke=()=>(ue.value=[],le.value=u,Te.value=!0,t.network.getAllTokens(Be.value).then(He=>{ue.value=He,le.value=He[0],Te.value=!1})),Ve=computed(()=>{var je;let He="Send";return parseInt(Ce.value)>0&&(He="Send "+formatFloatingPointValue(Ce.value).value+" "+((je=le.value)==null?void 0:je.symbol.toUpperCase())),se.value||(He="Send NFT"),He}),ze=computed(()=>!(!Ue.value||ye.value.isNeg()||!de.value||Re.value.ECONOMY.nativeValue==="0")),Ue=computed(()=>{if(!t.network.isAddress(getAddress$1(Se.value))||se.value&&!isValidDecimals(Ce.value,le.value.decimals)||!se.value&&!Ae.value.id)return!1;const He=new BigNumber$1(Ce.value);return!(He.isNaN()||He.gt(Ht.value))}),Oe=async()=>{fe.value=0;const He=new PublicKey(getAddress$1(ve.value.from)),je=ve.value.to?new PublicKey(getAddress$1(ve.value.to)):He,Ke=(await getPrioritizationFees(new PublicKey(getAddress$1(ve.value.from)),te.value.web3)).high,Ge=new Transaction$2().add(ComputeBudgetProgram.setComputeUnitPrice({microLamports:Ke*100}));if(se.value&&ve.value.contract===NATIVE_TOKEN_ADDRESS){const Pt=await te.value.web3.getBalance(je),Gt=await te.value.web3.getMinimumBalanceForRentExemption(ACCOUNT_SIZE);Ge.add(SystemProgram.transfer({fromPubkey:He,toPubkey:je,lamports:libExports.toBN(ve.value.value).toNumber()})),libExports.toBN(Pt).lt(libExports.toBN(Gt))&&(fe.value=Gt-Pt,Ge.add(SystemProgram.transfer({fromPubkey:He,toPubkey:je,lamports:fe.value})))}else if(se.value||!se.value&&Ae.value.type===NFTType.SolanaToken){const Pt=new PublicKey(ve.value.contract),Gt=await te.value.web3.getAccountInfo(Pt),Zt=getAssociatedTokenAddressSync(Pt,je,void 0,Gt.owner),aa=getAssociatedTokenAddressSync(Pt,He,void 0,Gt.owner);await getAccount(te.value.web3,Zt,void 0,Gt.owner).then(()=>!0).catch(()=>!1)?Ge.add(createTransferInstruction(aa,Zt,He,libExports.toBN(ve.value.value).toNumber(),[],Gt.owner)):(Ge.add(createAssociatedTokenAccountInstruction(He,Zt,je,Pt,Gt.owner)),Ge.add(createTransferInstruction(aa,Zt,He,libExports.toBN(ve.value.value).toNumber(),[],Gt.owner)),fe.value=await te.value.web3.getMinimumBalanceForRentExemption(ACCOUNT_SIZE))}else if(!se.value&&Ae.value.type===NFTType.SolanaBGUM){const Pt=createUmi(te.value.web3).use(srcExports.mplBubblegum()),Gt=await srcExports.getAssetWithProof(Pt,new PublicKey(Ae.value.contract));srcExports.transfer(Pt,{...Gt,leafOwner:He,newLeafOwner:je}).getInstructions().forEach(aa=>{aa.keys=aa.keys.map(ta=>(ta.pubkey=new PublicKey(ta.pubkey),ta)),aa.programId=new PublicKey(aa.programId),Ge.add(aa)})}Ge.feePayer=He,we.value&&(ce.value=""),te.value.web3.getLatestBlockhash().then(async Pt=>{Ge.recentBlockhash=Pt.blockhash,pe.value=Ge,Fe(Ge).then(()=>{we.value&&Xt(parseFloat(Ht.value)<0?"0":Ht.value)})})},Dt=ref(!1),$t=ref(!1),Mt=ref(!1),Kt=ref(!1);watch([Ue,Se,le,Ae,se],()=>{Ue.value&&Oe()}),watch([se],()=>{Xt("0")});const Vt=()=>{trackSendEvents(SendEventType.SendDecline,{network:t.network.name}),ee.go(-1)},Ht=computed(()=>se.value?le.value.contract===NATIVE_TOKEN_ADDRESS?fromBase(libExports.toBN(le.value.balance||"0").sub(libExports.toBN(toBase(Re.value[xe.value].nativeValue,le.value.decimals))).toString(),le.value.decimals):fromBase(le.value.balance,le.value.decimals):"0"),$e=()=>{we.value=!0,Ue.value&&Oe()},Pe=He=>{Be.value=He},Ne=async He=>{lodashExports.debounce(()=>{ae.resolveName(He,[t.network.name,"ETH"]).then(Ke=>{Ke&&(Se.value=Ke)})},500)(),Se.value=He},We=He=>{Dt.value=He},Xe=He=>{$t.value=He},Wt=()=>{Mt.value=!Mt.value},Ft=He=>{Be.value=He,Dt.value=!1,ke()},jt=He=>{Se.value=He,$t.value=!1},ea=He=>{Xt("0"),le.value=He,Mt.value=!1},Xt=He=>{He===""&&(He="0");const je=new BigNumber$1(He);we.value=!1,ce.value=je.lt(0)?"0":He,Ue.value&&Oe()},Yt=new RecentlySentAddressesState,Rt=async()=>{await Yt.addRecentlySentAddress(t.network,Se.value);const je=await new PublicKeyRing().getAccount(Be.value.toLowerCase()),Ke={TransactionData:ve.value,isNFT:!se.value,NFTData:se.value?void 0:Ae.value,toToken:{amount:toBase(Ce.value,le.value.decimals),decimals:le.value.decimals,icon:le.value.icon,symbol:le.value.symbol||"unknown",valueUSD:new BigNumber$1(le.value.price||"0").times(Ce.value).toString(),name:le.value.name||"",price:le.value.price||"0"},fromAddress:je.address,fromAddressName:je.name,gasFee:Re.value[xe.value],gasPriceType:xe.value,toAddress:Se.value,encodedTx:bs58$3.encode(pe.value.serialize({requireAllSignatures:!1,verifySignatures:!1}))},Ge=ee.resolve({name:routes.verify.name,query:{id:oe,txData:Buffer.from(JSON.stringify(Ke),"utf8").toString("base64")}});je.isHardware?(await Browser$1.windows.create({url:Browser$1.runtime.getURL(getUiPath(`sol-hw-verify?id=${Ge.query.id}&txData=${Ge.query.txData}`,ProviderName.solana)),type:"popup",focused:!0,height:600,width:460}),window.close()):ee.push(Ge)},Le=He=>{se.value=He},qe=He=>{Kt.value=He},Ye=He=>{Ae.value=He,Kt.value=!1};return(He,je)=>(openBlock(),createElementBlock("div",_hoisted_1,[unref(oe)?(openBlock(),createElementBlock("div",_hoisted_2,[createVNode$1(SendHeader,{"is-send-token":se.value,"is-nft-available":!!n.network.NFTHandler,onClose:Vt,onToggleType:Le},null,8,["is-send-token","is-nft-available"]),createVNode$1(_sfc_main$4,{ref:"addressInputFrom",from:!0,value:Be.value,network:n.network,"disable-direct-input":!0,onClick:je[0]||(je[0]=Ke=>We(!0)),"onUpdate:inputAddress":Pe,"onToggle:showContacts":We},null,8,["value","network"]),createVNode$1(_sfc_main$s,{"show-accounts":Dt.value,"account-info":n.accountInfo,address:Be.value,network:n.network,"onSelected:account":Ft,onClose:We},null,8,["show-accounts","account-info","address","network"]),createVNode$1(_sfc_main$4,{ref_key:"addressInputTo",ref:ne,value:Se.value,network:n.network,"onUpdate:inputAddress":Ne,"onToggle:showContacts":Xe},null,8,["value","network"]),createVNode$1(SendContactsList,{"show-accounts":$t.value,"account-info":n.accountInfo,address:Se.value,network:n.network,"onSelected:account":jt,"onUpdate:pasteFromClipboard":je[1]||(je[1]=Ke=>ne.value.pasteFromClipboard()),onClose:Xe},null,8,["show-accounts","account-info","address","network"]),se.value?(openBlock(),createBlock(_sfc_main$3,{key:0,token:le.value,"onUpdate:toggleTokenSelect":Wt},null,8,["token"])):createCommentVNode("",!0),withDirectives(createVNode$1(_sfc_main$J,{"is-send":!0,assets:ue.value,"is-loading":Te.value,onClose:Wt,"onUpdate:selectAsset":ea},null,8,["assets","is-loading"]),[[vShow,Mt.value]]),se.value?createCommentVNode("",!0):(openBlock(),createBlock(_sfc_main$e,{key:1,item:Ae.value,"is-sending-disabled":Ue.value&&!de.value,onToggleSelect:qe},null,8,["item","is-sending-disabled"])),withDirectives(createVNode$1(_sfc_main$h,{address:Be.value,network:n.network,"selected-nft":unref(ie),onClose:qe,onSelectNft:Ye},null,8,["address","network","selected-nft"]),[[vShow,Kt.value]]),se.value?(openBlock(),createBlock(_sfc_main$p,{key:2,amount:ce.value,"show-max":!0,"fiat-value":le.value.price,"has-enough-balance":De.value,"onUpdate:inputAmount":Xt,"onUpdate:inputSetMax":$e},null,8,["amount","fiat-value","has-enough-balance"])):createCommentVNode("",!0),createVNode$1(SendFeeSelect$1,{style:{width:"394px"},selected:xe.value,fee:Re.value[xe.value]},null,8,["selected","fee"]),withDirectives(createVNode$1(_sfc_main$2,{"error-msg":Ie.value},null,8,["error-msg"]),[[vShow,Ie.value]]),createBaseVNode("div",_hoisted_3,[createBaseVNode("div",_hoisted_4,[createVNode$1(_sfc_main$2W,{title:"Cancel",click:Vt,"no-background":!0})]),createBaseVNode("div",_hoisted_5,[createVNode$1(_sfc_main$2W,{title:Ve.value,click:Rt,disabled:!ze.value},null,8,["title","disabled"])])])])):createCommentVNode("",!0)]))}}),SendTransactionSolana=_export_sfc(_sfc_main$1,[["__scopeId","data-v-22fd71b7"]]),_sfc_main=defineComponent({__name:"index",props:{network:{type:Object,default:()=>({})},accountInfo:{type:Object,default:()=>({})}},setup(n){const t={[ProviderName.ethereum]:SendTransactionEVM,[ProviderName.polkadot]:SendTransactionSubstrate,[ProviderName.bitcoin]:SendTransactionBTC,[ProviderName.kadena]:SendTransactionKadena,[ProviderName.solana]:SendTransactionSolana,[ProviderName.enkrypt]:null},u=shallowRef(),c=useRoute(),ee=ref(),te=ref(),ae=n,ne=c.params.id;return getNetworkByName(ne).then(oe=>{oe&&(ee.value=ae.network,te.value=ae.accountInfo,u.value=t[oe.provider])}),(oe,ie)=>(openBlock(),createBlock(resolveDynamicComponent(u.value),{"account-info":te.value,network:ee.value},null,8,["account-info","network"]))}}),routes={intro:{path:"/",components:{view:Intro},name:"intro-screen"},locked:{path:"/locked",components:{view:LockScreen},name:"lock-screen"},activity:{path:"/activity/:id?",components:{view:NetworkActivity},name:"activity"},assets:{path:"/assets/:id?",components:{view:NetworkAssets},name:"assets"},dapps:{path:"/dapps/:id?",components:{view:NetworkDApps},name:"dapps"},nfts:{path:"/nfts/:id?",components:{view:NetworkNFTs},name:"nfts"},send:{path:"/send/:id/:isToken/:tokenData?",components:{view:_sfc_main},name:"send-transaction"},verify:{path:"/verify-transaction/:id?",components:{view:_sfc_main$x},name:"verify-transaction"},swap:{path:"/swap/:id?",components:{view:Swap},name:"swap"},swapBestOffer:{path:"/swap-best-offer/:id?",components:{view:_sfc_main$37},name:"swap-best-offer"},swapBestOfferHW:{path:"/swap-best-offer-hw/:id?",component:_sfc_main$37,name:"swap-best-offer-hw"},addNetwork:{path:"/add-network",components:{view:AddNetwork},name:"add-network"}},router=createRouter({history:createWebHashHistory(),routes:Object.values(routes)});global.WeakMap=WeakMap;const app=createApp(_sfc_main$1A);app.use(router).use(index$4,{name:"vue3lottie"});app.config.globalProperties.$filters=filters;app.mount("#app");
