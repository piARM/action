91456,6291456,6291456]),new Uint32Array([0,0,0,6291456,6291456,0,0,0,6291456,6291456,6291456,0,0,0,6291456,6291456]),new Uint32Array([2100961,2123873,2223617,2098113,2123393,2104929,2223649,2105761,2123713,2123809,2124257,2101377,2101697,2124865,2101857,2102017]),new Uint32Array([2239649,2120577,2239681,2239713,2239745,2239777,2239809,2234529,2239841,2239873,2239905,2239937,2239969,2240001,2240001,2240033]),new Uint32Array([2143170,6291456,2143234,2143234,2190337,6291456,2190369,6291456,6291456,2190401,6291456,2190433,6291456,2190465,6291456,2143298]),new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,23068672]),new Uint32Array([23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),new Uint32Array([2206561,6291456,2206593,6291456,2206625,6291456,2206657,6291456,2206689,6291456,2206721,6291456,2206753,6291456,2206785,6291456]),new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,0,0,6291456,6291456,6291456,6291456]),new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,6291456,6291456,6291456]),new Uint32Array([6291456,2191457,2191489,6291456,2191521,6291456,2191553,2191585,6291456,2191617,2191649,2191681,6291456,6291456,2191713,2191745]),new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2204097,2107233,2204129,2189121,2203937]),new Uint32Array([2136001,2097153,2136097,2107681,2134561,2132833,2160705,2133153,2162689,2134945,2161217,2135713,2245761,2243585,2245793,2245825]),new Uint32Array([0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([2102625,2113761,2107201,2107297,2107329,0,2110049,0,0,0,2098305,2110177,2110145,2102593,2115009,2110337]),new Uint32Array([2255681,2255713,2255745,2255777,2186690,2186754,2186818,2255809,2255841,2255873,2255905,2186882,2255937,2186946,2255969,2256001]),new Uint32Array([2226721,6291456,2226753,6291456,2226785,6291456,2226817,6291456,2226849,6291456,2194625,2203937,2204193,2226881,2204257,6291456]),new Uint32Array([2242337,2240225,2242369,2242401,2242433,2242465,2242497,2240289,2238305,2242529,2240321,2242561,2240353,2242593,2220097,2156738]),new Uint32Array([0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),new Uint32Array([2253313,2241569,2253345,2184450,2253377,2253409,2184514,2184578,2253441,2253473,2253505,2253537,2253569,2253569,2253601,2253633]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456]),new Uint32Array([2240065,2240097,2240129,2240161,2240193,2240225,2240257,2238433,2240289,2240321,2240353,2240385,2156674,2240417,0,0]),new Uint32Array([2173314,2173378,2173442,2173506,2173570,2173634,2173698,2173762,2173826,2173890,2173954,2174018,2174082,2174146,2174210,2174274]),new Uint32Array([2115585,2115681,2115777,2115873,2115969,2116065,2116161,2116257,2116353,2116449,2116545,2116641,2116737,2116833,2116929,2117025]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456]),new Uint32Array([2189121,2189153,2189185,2189217,2189249,2189281,2189313,6291456,2189345,2189377,2189409,2189441,2189473,2189505,2189537,4240258]),new Uint32Array([2098305,2110177,2110145,2102593,2115009,2110337,2115201,2115297,2098209,2112993,2107233,2098241,2110209,2110273,2107553,2113569]),new Uint32Array([2135043,2135139,2135139,2135235,2135331,2135427,2135523,2135523,2135619,2135715,2135811,2135907,2136003,2136003,2136099,2136195]),new Uint32Array([10503395,10503491,10503587,10503683,10503779,10503875,2098209,2112993,2107233,2098241,2110209,2110273,2107553,2113569,2102625,2113761]),new Uint32Array([6291456,6291456,2225217,6291456,2225249,6291456,2225281,6291456,2225313,6291456,2225345,6291456,2225377,6291456,2225409,6291456]),new Uint32Array([18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2181698,2181762,2181826,6291456,6291456,6291456]),new Uint32Array([2103650,2103778,2103906,2104034,10500611,10500707,10500803,10500899,10500995,10501091,10501187,10501283,10501379,10491332,10491460,10491588]),new Uint32Array([23068672,23068672,18923906,23068672,23068672,23068672,23068672,18923970,23068672,23068672,23068672,23068672,18924034,23068672,23068672,23068672]),new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,0]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([2251105,2251137,2251169,2251201,2251233,2251265,2251297,2251329,2239201,2251361,2183490,2251393,2251425,2251457,2251489,2239265]),new Uint32Array([2194785,6291456,2194817,6291456,2194849,6291456,2194881,6291456,0,0,10532674,6291456,6291456,6291456,10583521,2194945]),new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),new Uint32Array([6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Uint32Array([2136002,2141282,2161602,2136098,2161858,2161922,2161986,2162050,2140514,2136578,2136290,2136674,2097666,2097346,2097698,2107714]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),new Uint32Array([2193377,6291456,2193409,6291456,2193441,6291456,2193473,6291456,2193505,6291456,2193537,6291456,2193569,6291456,2193601,6291456]),new Uint32Array([2130051,2130147,2130243,2130339,2130435,2130531,2130627,2130723,2130819,2130915,2131011,2131107,2131203,2131299,2131395,2131491]),new Uint32Array([0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([2205025,6291456,2205057,6291456,2205089,6291456,2205121,6291456,2205153,6291456,2205185,6291456,2205217,6291456,2205249,6291456]),new Uint32Array([2197889,6291456,2197921,6291456,2197953,6291456,2197985,6291456,2198017,6291456,2198049,6291456,2198081,6291456,2198113,6291456]),new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),new Uint32Array([2111907,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([2159746,2159746,2159810,2159810,2159874,2159874,2159938,2159938,2159938,2160002,2160002,2160002,2108129,2108129,2108129,2108129]),new Uint32Array([2134945,2135137,2135137,2135137,2135137,2161217,2161217,2161217,2161217,2097441,2097441,2097441,2097441,2135713,2135713,2135713]),new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([2225441,6291456,2225473,6291456,2225505,6291456,2225537,6291456,2225569,6291456,2225601,6291456,2225633,6291456,2225665,6291456]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([2224065,6291456,2224097,6291456,2224129,6291456,2224161,6291456,2224193,6291456,2224225,6291456,2224257,6291456,2224289,6291456]),new Uint32Array([2199777,6291456,2199809,6291456,2199841,6291456,2199873,6291456,2199905,6291456,2199937,6291456,2199969,6291456,2200001,6291456]),new Uint32Array([2107329,2114145,2110049,2114337,2114433,0,2098305,2110177,2110145,2102593,2115009,2110337,2115201,0,2098209,2112993]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0,0,0,0,0,0,0,0]),new Uint32Array([2205537,6291456,2205569,6291456,2205601,6291456,2205633,6291456,2205665,6291456,2205697,6291456,2205729,6291456,2205761,6291456]),new Uint32Array([2156802,2156866,2242625,2242657,2242689,2156930,2156994,2157058,2242721,2242753,0,0,0,0,0,0]),new Uint32Array([2211969,6291456,2212001,6291456,2212033,6291456,2212065,6291456,2212097,6291456,2212129,6291456,2212161,6291456,2212193,6291456]),new Uint32Array([2110209,2110273,2107553,2113569,2102625,2113761,2107201,2107297,2107329,2114145,2110049,2114337,2114433,2098177,2098305,2110177]),new Uint32Array([2136001,2097153,2136097,0,2134561,2132833,2160705,2133153,0,2134945,2161217,2135713,2245761,0,2245793,0]),new Uint32Array([2181954,2182018,2100897,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,23068672,23068672]),new Uint32Array([6291456,6291456,6291456,2209697,6291456,6291456,6291456,6291456,2209729,2209761,2209793,2195073,2209825,10498211,10497251,10598465]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),new Uint32Array([6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([2220833,2220865,2220897,2220929,2220961,2220993,2221025,2221057,2221089,2221121,2221153,2221185,2221217,2221249,2221281,2221313]),new Uint32Array([6291456,23068672,6291456,2145666,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,6291456]),new Uint32Array([2190721,6291456,2190753,6291456,2190785,6291456,2190817,6291456,2190849,6291456,2190881,6291456,2190913,6291456,2190945,6291456]),new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0]),new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,6291456,6291456]),new Uint32Array([2215105,2215137,2215169,2215201,2215233,2215265,2215297,2215329,2215361,2215393,2215425,2215457,2215489,2215521,2215553,2215585]),new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,23068672,23068672,6291456,23068672,23068672,23068672,23068672,6291456,6291456]),new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0]),new Uint32Array([0,2107649,2097729,0,2097377,0,0,2107745,2135137,2097505,2107617,0,2097697,2137633,2097633,2097441]),new Uint32Array([2206817,6291456,2206849,6291456,2206881,6291456,2206913,6291456,2206945,6291456,2206977,6291456,2207009,6291456,2207041,6291456]),new Uint32Array([23068672,23068672,23068672,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23068672]),new Uint32Array([2134754,2164482,2164546,2135138,2133890,2133794,2139266,2134658,2134562,2165506,2135138,2161218,2165826,2165826,6291456,6291456]),new Uint32Array([2257697,2188162,2257729,2257761,2257793,2257825,2257857,2257889,2257921,2188226,2242593,2257953,2257985,2258017,2258049,2258081]),new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0]),new Uint32Array([2114337,2114433,2098177,2098305,2110177,2110145,2102593,2115009,2110337,2115201,2115297,10632705,10633601,10632737,10633633,2245057]),new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,6291456,0,0,0,0,0,0,0,0,0]),new Uint32Array([2195425,2195457,2195489,2195265,2195521,2195553,2195585,2195617,2195649,2195681,2149185,2245697,2148609,2195105,2195137,2195169]),new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456])],me=new Uint16Array([656,656,605,162,48,207,7,2,147,147,666,339,396,696,98,98,317,557,386,672,641,744,179,4,679,32,124,441,285,270,215,380,713,667,475,167,484,98,98,98,98,98,98,35,98,366,471,98,249,249,249,249,630,249,249,708,233,13,483,98,248,73,194,462,244,491,400,98,98,98,717,612,166,496,176,129,331,565,727,295,284,608,425,516,381,117,98,98,128,611,249,86,418,98,439,571,683,645,98,98,340,249,98,169,98,98,98,98,98,178,749,98,499,29,98,249,678,98,98,98,98,98,79,488,98,98,340,30,98,69,190,712,98,173,134,147,147,147,98,292,738,619,37,249,286,98,98,736,249,265,390,98,469,479,85,508,53,559,186,305,695,479,85,395,181,111,683,631,389,421,85,125,320,710,186,523,227,479,85,125,465,96,186,738,453,132,669,62,293,434,683,134,466,139,85,578,165,460,186,638,143,139,85,251,165,450,186,602,676,139,98,185,618,254,186,98,410,146,98,115,256,545,683,203,604,98,98,743,163,581,147,147,350,98,63,335,402,577,147,147,563,277,98,436,72,187,27,205,426,538,704,273,104,134,147,147,98,98,340,446,98,312,498,221,535,398,147,147,276,98,98,526,98,98,98,98,98,712,604,98,98,98,98,98,98,98,98,98,98,98,98,98,373,430,98,98,373,98,98,412,722,81,98,98,98,722,98,98,98,313,98,341,98,750,98,98,98,98,98,574,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,604,341,98,98,98,98,98,123,490,374,98,759,98,38,490,433,98,98,98,267,249,600,750,750,327,750,98,98,98,98,98,123,234,98,9,98,98,98,98,592,98,712,627,627,723,98,499,571,98,98,581,98,750,588,98,98,98,568,98,98,98,157,249,142,750,750,499,249,298,147,147,147,544,98,98,531,290,98,340,554,561,98,761,98,98,98,79,226,98,98,531,620,517,98,98,98,235,322,658,43,738,131,126,437,98,98,477,309,614,164,575,90,98,681,511,252,249,249,249,150,423,716,570,730,324,489,542,675,752,180,537,572,217,589,223,279,264,468,636,291,528,118,58,367,422,106,21,222,406,107,737,40,388,606,530,269,120,188,610,193,246,321,213,98,147,249,249,298,336,238,661,323,102,211,231,231,470,98,98,98,98,98,98,98,98,98,138,719,98,98,369,98,98,98,98,98,98,98,98,98,98,98,392,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,597,147,134,147,160,703,171,149,51,699,74,558,405,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,510,98,98,98,98,98,98,153,98,98,98,98,98,417,98,98,98,98,98,98,98,98,98,640,98,546,98,98,98,98,98,98,274,644,82,98,98,712,632,34,732,415,665,349,28,586,646,140,98,98,518,98,98,98,505,613,98,597,225,225,225,225,249,249,98,98,98,98,98,184,147,147,98,197,98,98,98,98,98,289,189,259,525,747,342,463,8,54,365,151,19,543,299,472,147,147,363,98,347,201,604,98,98,98,98,114,98,98,98,98,98,56,556,98,98,598,11,742,362,355,337,596,98,98,98,98,757,98,456,458,420,509,77,154,693,64,200,514,344,351,110,133,670,486,391,112,307,603,414,529,485,635,427,609,333,88,224,440,359,714,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,341,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,341,98,98,98,597,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,581,147,419,726,541,296,616,506,98,98,98,98,98,607,98,98,378,700,724,587,172,504,208,495,686,45,642,147,147,247,297,98,493,750,98,98,98,738,741,98,98,531,746,750,249,384,98,98,137,98,175,527,98,341,286,98,98,709,639,501,668,712,98,98,310,497,49,135,98,288,98,98,98,304,448,281,340,314,705,680,225,98,98,113,174,255,25,652,306,16,98,98,622,750,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,757,98,566,98,98,581,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,23,92,316,459,653,141,206,161,371,584,512,452,168,6,583,219,353,109,624,145,41,671,691,521,33,399,260,155,687,731,147,147,637,387,628,579,89,394,338,177,461,83,580,429,507,60,195,720,100,245,562,26,648,262,540,80,218,413,240,524,711,547,416,84,136,278,519,755,147,375,148,698,424,382,657,478,451,147,147,435,701,59,249,408,573,660,626,358,253,654,42,407,721,550,301,303,346,199,287,515,250,758,158,438,0,411,598,258,555,522,536,147,492,98,81,24,499,499,147,147,98,98,98,98,98,98,98,134,447,98,98,590,98,98,98,98,712,341,710,147,147,98,98,68,147,147,147,147,147,147,147,147,98,341,98,98,98,710,268,581,98,98,228,98,134,98,98,352,98,70,98,98,615,592,147,147,311,328,551,98,98,98,98,98,98,499,750,520,643,75,98,581,98,98,738,98,98,98,356,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,597,98,592,738,147,147,147,147,147,147,147,147,147,93,98,98,156,98,546,98,98,98,712,638,147,147,147,98,15,98,690,98,650,147,147,147,147,98,98,98,280,98,715,98,98,202,144,98,651,123,123,98,98,98,98,147,147,98,98,706,597,98,98,98,385,98,364,98,629,98,242,47,147,147,147,147,147,98,98,98,98,123,147,147,147,664,50,692,282,98,98,98,300,98,98,241,750,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,712,98,98,101,507,147,147,147,147,98,98,738,98,79,78,147,147,147,147,147,98,581,147,98,597,561,98,98,39,718,715,98,754,561,98,98,593,507,98,123,750,561,98,175,748,108,98,98,480,561,98,98,709,368,98,604,571,98,421,99,745,147,147,147,147,65,70,750,98,98,376,209,750,674,479,85,576,465,553,122,214,147,147,147,147,147,147,147,147,98,98,98,694,119,294,507,147,98,98,98,249,159,750,147,147,147,147,147,147,147,147,147,147,98,98,376,198,268,560,147,147,98,98,98,249,325,750,341,147,98,98,340,548,750,147,147,147,98,313,627,98,147,147,147,147,147,147,147,147,147,147,147,147,98,98,99,5,147,147,147,147,147,147,621,403,98,98,98,326,677,329,98,343,444,750,147,147,147,147,585,98,98,409,46,147,539,98,98,237,729,567,98,98,347,454,184,147,98,98,98,123,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,85,98,376,401,592,98,341,98,98,688,308,497,147,147,147,147,503,98,98,481,494,750,66,98,601,230,750,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,263,147,147,147,147,147,147,147,147,147,147,147,710,98,98,98,532,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,750,147,147,147,147,147,147,98,98,98,98,98,98,712,571,98,98,98,98,98,98,98,98,98,98,98,98,757,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,712,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,597,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,123,98,712,501,147,147,147,147,147,147,98,499,94,98,98,98,119,592,14,421,95,98,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,634,370,98,98,98,134,147,147,147,147,147,147,98,98,98,98,275,52,249,249,673,561,147,147,147,147,662,334,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,738,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,592,147,147,123,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,712,147,147,147,184,18,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,581,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,134,341,123,318,663,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,592,98,98,725,98,98,455,1,753,623,98,398,457,116,98,123,147,98,98,98,98,216,147,147,147,147,147,147,147,147,147,98,757,98,98,98,98,98,597,98,123,147,147,147,147,147,147,147,147,558,582,243,20,449,71,697,564,482,261,513,591,105,558,582,243,599,728,239,22,684,354,97,733,319,74,558,582,243,20,449,239,697,564,482,97,733,319,74,558,582,243,191,361,182,121,103,760,595,442,431,272,87,383,170,474,502,474,183,257,348,404,229,212,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,249,249,249,345,249,249,617,668,594,739,611,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,401,393,266,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,341,718,501,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,99,650,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,332,497,147,147,500,31,445,98,192,501,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,604,98,98,98,571,147,147,147,147,604,98,98,499,147,147,147,147,147,147,147,147,147,147,147,147,204,682,357,330,467,633,751,734,487,152,432,152,147,147,147,507,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,581,98,98,98,98,98,98,757,712,604,604,604,98,592,377,625,360,558,649,98,702,98,98,91,499,147,147,147,683,98,735,647,302,283,76,655,592,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,738,341,341,98,98,98,98,98,98,98,757,98,98,98,98,98,123,581,147,581,98,98,98,738,750,98,98,738,98,499,507,147,147,147,147,98,98,98,98,98,98,98,85,98,98,98,98,492,98,98,98,98,98,98,98,98,757,499,315,597,98,123,597,184,597,147,147,98,98,98,98,98,98,98,98,98,740,98,98,134,147,147,549,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,499,147,147,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,571,98,98,98,98,98,98,98,98,98,98,98,98,98,499,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,507,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,710,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,10,44,464,17,443,534,476,127,220,379,3,473,707,61,569,236,659,12,689,397,232,57,196,428,130,36,685,552,55,210,372,533,756,67,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147]),ge="صلى الله عليه وسلمجل جلالهキロメートルrad∕s2𝅘𝅥𝅮𝅘𝅥𝅯𝅘𝅥𝅰𝅘𝅥𝅱𝅘𝅥𝅲𝆹𝅥𝅮𝆺𝅥𝅮𝆹𝅥𝅯𝆺𝅥𝅯エスクードキログラムキロワットグラムトンクルゼイロサンチームパーセントピアストルファラッドブッシェルヘクタールマンションミリバールレントゲン′′′′1⁄10viii(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)∫∫∫∫(오전)(오후)アパートアルファアンペアイニングエーカーカラットカロリーキュリーギルダークローネサイクルシリングバーレルフィートポイントマイクロミクロンメガトンリットルルーブル株式会社kcalm∕s2c∕kgاكبرمحمدصلعمرسولریال𝅗𝅥1⁄41⁄23⁄4 ̈́ྲཱྀླཱྀ ̈͂ ̓̀ ̓́ ̓͂ ̔̀ ̔́ ̔͂ ̈̀‵‵‵a/ca/sc/oc/utelfax1⁄71⁄91⁄32⁄31⁄52⁄53⁄54⁄51⁄65⁄61⁄83⁄85⁄87⁄8xii0⁄3∮∮∮(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)::====(ᄀ)(ᄂ)(ᄃ)(ᄅ)(ᄆ)(ᄇ)(ᄉ)(ᄋ)(ᄌ)(ᄎ)(ᄏ)(ᄐ)(ᄑ)(ᄒ)(가)(나)(다)(라)(마)(바)(사)(아)(자)(차)(카)(타)(파)(하)(주)(一)(二)(三)(四)(五)(六)(七)(八)(九)(十)(月)(火)(水)(木)(金)(土)(日)(株)(有)(社)(名)(特)(財)(祝)(労)(代)(呼)(学)(監)(企)(資)(協)(祭)(休)(自)(至)pte10月11月12月ergltdアールインチウォンオンスオームカイリガロンガンマギニーケースコルナコーポセンチダースノットハイツパーツピクルフランペニヒヘルツペンスページベータボルトポンドホールホーンマイルマッハマルクヤードヤールユアンルピー10点11点12点13点14点15点16点17点18点19点20点21点22点23点24点hpabardm2dm3khzmhzghzthzmm2cm2km2mm3cm3km3kpampagpalogmilmolppmv∕ma∕m10日11日12日13日14日15日16日17日18日19日20日21日22日23日24日25日26日27日28日29日30日31日galffifflשּׁשּׂ ٌّ ٍّ َّ ُّ ِّ ّٰـَّـُّـِّتجمتحجتحمتخمتمجتمحتمخجمححميحمىسحجسجحسجىسمحسمجسممصححصممشحمشجيشمخشممضحىضخمطمحطممطميعجمعممعمىغممغميغمىفخمقمحقمملحملحيلحىلججلخملمحمحجمحيمجحمجممخممجخهمجهممنحمنحىنجمنجىنمينمىيممبخيتجيتجىتخيتخىتميتمىجميجحىجمىسخىصحيشحيضحيلجيلمييحييجييميمميقمينحيعميكمينجحمخيلجمكممجحيحجيمجيفميبحيسخينجيصلےقلے〔s〕ppv〔本〕〔三〕〔二〕〔安〕〔点〕〔打〕〔盗〕〔勝〕〔敗〕 ̄ ́ ̧ssi̇ijl·ʼndžljnjdz ̆ ̇ ̊ ̨ ̃ ̋ ιեւاٴوٴۇٴيٴक़ख़ग़ज़ड़ढ़फ़य़ড়ঢ়য়ਲ਼ਸ਼ਖ਼ਗ਼ਜ਼ਫ਼ଡ଼ଢ଼ําໍາຫນຫມགྷཌྷདྷབྷཛྷཀྵཱཱིུྲྀླྀྒྷྜྷྡྷྦྷྫྷྐྵaʾἀιἁιἂιἃιἄιἅιἆιἇιἠιἡιἢιἣιἤιἥιἦιἧιὠιὡιὢιὣιὤιὥιὦιὧιὰιαιάιᾶι ͂ὴιηιήιῆιὼιωιώιῶι ̳!! ̅???!!?rs°c°fnosmtmivix⫝̸ ゙ ゚よりコト333435참고주의363738394042444546474849503月4月5月6月7月8月9月hgev令和ギガデシドルナノピコビルペソホンリラレムdaauovpciu平成昭和大正明治naμakakbmbgbpfnfμfμgmgμlmldlklfmnmμmpsnsμsmsnvμvkvpwnwμwmwkwkωmωbqcccddbgyhainkkktlnlxphprsrsvwb𤋮𢡊𢡄𣏕𥉉𥳐𧻓stմնմեմիվնմխיִײַשׁשׂאַאָאּבּגּדּהּוּזּטּיּךּכּלּמּנּסּףּפּצּקּרּתּוֹבֿכֿפֿאלئائەئوئۇئۆئۈئېئىئجئحئمئيبجبمبىبيتىتيثجثمثىثيخحضجضمطحظمغجفجفحفىفيقحقىقيكاكجكحكخكلكىكينخنىنيهجهىهييىذٰرٰىٰئرئزئنبزبنترتزتنثرثزثنمانرنزننيريزئخئهبهتهصخنههٰثهسهشهطىطيعىعيغىغيسىسيشىشيصىصيضىضيشخشرسرصرضراً ًـًـّ ْـْلآلألإ𐐨𐐩𐐪𐐫𐐬𐐭𐐮𐐯𐐰𐐱𐐲𐐳𐐴𐐵𐐶𐐷𐐸𐐹𐐺𐐻𐐼𐐽𐐾𐐿𐑀𐑁𐑂𐑃𐑄𐑅𐑆𐑇𐑈𐑉𐑊𐑋𐑌𐑍𐑎𐑏𐓘𐓙𐓚𐓛𐓜𐓝𐓞𐓟𐓠𐓡𐓢𐓣𐓤𐓥𐓦𐓧𐓨𐓩𐓪𐓫𐓬𐓭𐓮𐓯𐓰𐓱𐓲𐓳𐓴𐓵𐓶𐓷𐓸𐓹𐓺𐓻𐳀𐳁𐳂𐳃𐳄𐳅𐳆𐳇𐳈𐳉𐳊𐳋𐳌𐳍𐳎𐳏𐳐𐳑𐳒𐳓𐳔𐳕𐳖𐳗𐳘𐳙𐳚𐳛𐳜𐳝𐳞𐳟𐳠𐳡𐳢𐳣𐳤𐳥𐳦𐳧𐳨𐳩𐳪𐳫𐳬𐳭𐳮𐳯𐳰𐳱𐳲𑣀𑣁𑣂𑣃𑣄𑣅𑣆𑣇𑣈𑣉𑣊𑣋𑣌𑣍𑣎𑣏𑣐𑣑𑣒𑣓𑣔𑣕𑣖𑣗𑣘𑣙𑣚𑣛𑣜𑣝𑣞𑣟𖹠𖹡𖹢𖹣𖹤𖹥𖹦𖹧𖹨𖹩𖹪𖹫𖹬𖹭𖹮𖹯𖹰𖹱𖹲𖹳𖹴𖹵𖹶𖹷𖹸𖹹𖹺𖹻𖹼𖹽𖹾𖹿𞤢𞤣𞤤𞤥𞤦𞤧𞤨𞤩𞤪𞤫𞤬𞤭𞤮𞤯𞤰𞤱𞤲𞤳𞤴𞤵𞤶𞤷𞤸𞤹𞤺𞤻𞤼𞤽𞤾𞤿𞥀𞥁𞥂𞥃0,1,2,3,4,5,6,7,8,9,wzhvsdwcmcmdmrdjほかココ𠄢𠘺𠔜𠕋𩇟𠨬𠭣𡓤𡚨𡛪𡧈𡬘𡷤𡷦𢆃𪎒𢌱𣊸𦇚𢛔𢬌𢯱𣀊𣏃𣑭𣚣𣢧𣪍𡴋𣫺𣲼𣴞𣻑𣽞𣾎𠔥𤉣𤘈𤜵𤠔𤰶𤲒𢆟𤾡𤾸𥁄𥃳𥃲𥄙𥄳𥐝𥘦𥚚𥛅𥥼𥪧𥮫𥲀𥾆𦈨𦉇𦋙𦌾𦓚𦔣𦖨𣍟𦞧𦞵𣎓𣎜𦬼𦰶𦵫𦳕𧏊𦼬𦾱𧃒𧙧𧢮𧥦𧲨𧼯𠠄𠣞𨗒𨗭𨜮𨯺𨵷𩅅𩈚𩐊𩒖𩖶𩬰𪃎𪄅𪈎𪊑𪘀àáâãäåæçèéêëìíîïðñòóôõöøùúûüýþāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįĵķĺļľłńņňŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷÿźżɓƃƅɔƈɖɗƌǝəɛƒɠɣɩɨƙɯɲɵơƣƥʀƨʃƭʈưʊʋƴƶʒƹƽǎǐǒǔǖǘǚǜǟǡǣǥǧǩǫǭǯǵƕƿǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟƞȣȥȧȩȫȭȯȱȳⱥȼƚⱦɂƀʉʌɇɉɋɍɏɦɹɻʁʕͱͳʹͷ;ϳέίόύβγδεζθκλνξοπρστυφχψϊϋϗϙϛϝϟϡϣϥϧϩϫϭϯϸϻͻͼͽѐёђѓєѕіїјљњћќѝўџабвгдежзийклмнопрстуфхцчшщъыьэюяѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯաբգդզէըթժլծկհձղճյշոչպջռստրցփքօֆ་ⴧⴭნᏰᏱᏲᏳᏴᏵꙋაბგდევზთიკლმოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶჷჸჹჺჽჾჿɐɑᴂɜᴖᴗᴝᴥɒɕɟɡɥɪᵻʝɭᶅʟɱɰɳɴɸʂƫᴜʐʑḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿἐἑἒἓἔἕἰἱἲἳἴἵἶἷὀὁὂὃὄὅὑὓὕὗᾰᾱὲΐῐῑὶΰῠῡὺῥ`ὸ‐+−∑〈〉ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞⱡɫᵽɽⱨⱪⱬⱳⱶȿɀⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳬⳮⳳⵡ母龟丨丶丿乙亅亠人儿入冂冖冫几凵刀力勹匕匚匸卜卩厂厶又口囗士夂夊夕女子宀寸小尢尸屮山巛工己巾干幺广廴廾弋弓彐彡彳心戈戶手支攴文斗斤方无曰欠止歹殳毋比毛氏气爪父爻爿片牙牛犬玄玉瓜瓦甘生用田疋疒癶白皮皿目矛矢石示禸禾穴立竹米糸缶网羊羽老而耒耳聿肉臣臼舌舛舟艮色艸虍虫血行衣襾見角言谷豆豕豸貝赤走足身車辛辰辵邑酉釆里長門阜隶隹雨靑非面革韋韭音頁風飛食首香馬骨高髟鬥鬯鬲鬼魚鳥鹵鹿麥麻黃黍黑黹黽鼎鼓鼠鼻齊齒龍龜龠.〒卄卅ᄁᆪᆬᆭᄄᆰᆱᆲᆳᆴᆵᄚᄈᄡᄊ짜ᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᄔᄕᇇᇈᇌᇎᇓᇗᇙᄜᇝᇟᄝᄞᄠᄢᄣᄧᄩᄫᄬᄭᄮᄯᄲᄶᅀᅇᅌᇱᇲᅗᅘᅙᆄᆅᆈᆑᆒᆔᆞᆡ上中下甲丙丁天地問幼箏우秘男適優印注項写左右医宗夜テヌモヨヰヱヲꙁꙃꙅꙇꙉꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝺꝼᵹꝿꞁꞃꞅꞇꞌꞑꞓꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩɬʞʇꭓꞵꞷꞹꞻꞽꞿꟃꞔᶎꟈꟊꟶꬷꭒʍᎠᎡᎢᎣᎤᎥᎦᎧᎨᎩᎪᎫᎬᎭᎮᎯᎰᎱᎲᎳᎴᎵᎶᎷᎸᎹᎺᎻᎼᎽᎾᎿᏀᏁᏂᏃᏄᏅᏆᏇᏈᏉᏊᏋᏌᏍᏎᏏᏐᏑᏒᏓᏔᏕᏖᏗᏘᏙᏚᏛᏜᏝᏞᏟᏠᏡᏢᏣᏤᏥᏦᏧᏨᏩᏪᏫᏬᏭᏮᏯ豈更賈滑串句契喇奈懶癩羅蘿螺裸邏樂洛烙珞落酪駱亂卵欄爛蘭鸞嵐濫藍襤拉臘蠟廊朗浪狼郎來冷勞擄櫓爐盧蘆虜路露魯鷺碌祿綠菉錄論壟弄籠聾牢磊賂雷壘屢樓淚漏累縷陋勒肋凜凌稜綾菱陵讀拏諾丹寧怒率異北磻便復不泌數索參塞省葉說殺沈拾若掠略亮兩凉梁糧良諒量勵呂廬旅濾礪閭驪麗黎曆歷轢年憐戀撚漣煉璉秊練聯輦蓮連鍊列劣咽烈裂廉念捻殮簾獵囹嶺怜玲瑩羚聆鈴零靈領例禮醴隸惡了僚寮尿料燎療蓼遼暈阮劉杻柳流溜琉留硫紐類戮陸倫崙淪輪律慄栗隆利吏履易李梨泥理痢罹裏裡離匿溺吝燐璘藺隣鱗麟林淋臨笠粒狀炙識什茶刺切度拓糖宅洞暴輻降廓兀嗀塚晴凞猪益礼神祥福靖精蘒諸逸都飯飼館鶴郞隷侮僧免勉勤卑喝嘆器塀墨層悔慨憎懲敏既暑梅海渚漢煮爫琢碑祉祈祐祖禍禎穀突節縉繁署者臭艹著褐視謁謹賓贈辶難響頻恵舘並况全侀充冀勇勺啕喙嗢墳奄奔婢嬨廒廙彩徭惘慎愈慠戴揄搜摒敖望杖滛滋瀞瞧爵犯瑱甆画瘝瘟盛直睊着磌窱类絛缾荒華蝹襁覆調請諭變輸遲醙鉶陼韛頋鬒㮝䀘䀹齃龎עםٱٻپڀٺٿٹڤڦڄڃچڇڍڌڎڈژڑکگڳڱںڻۀہھۓڭۋۅۉ、〖〗—–_{}【】《》「」『』[]#&*-<>\\$%@ءؤة\"'^|~⦅⦆・ゥャ¢£¬¦¥₩│←↑→↓■○ıȷ∇∂ٮڡٯ字双多解交映無前後再新初終販声吹演投捕遊指禁空合満申割営配得可丽丸乁你侻倂偺備像㒞兔兤具㒹內冗冤仌冬刃㓟刻剆剷㔕包匆卉博即卽卿灰及叟叫叱吆咞吸呈周咢哶唐啓啣善喫喳嗂圖圗噑噴壮城埴堍型堲報墬売壷夆夢奢姬娛娧姘婦㛮嬈嬾寃寘寳寿将㞁屠峀岍嵃嵮嵫嵼巡巢㠯巽帨帽幩㡢㡼庰庳庶舁弢㣇形彫㣣徚忍志忹悁㤺㤜惇慈慌慺憲憤憯懞戛扝抱拔捐挽拼捨掃揤搢揅掩㨮摩摾撝摷㩬敬旣書晉㬙㬈㫤冒冕最暜肭䏙朡杞杓㭉柺枅桒梎栟椔楂榣槪檨櫛㰘次歔㱎歲殟殻汎沿泍汧洖派浩浸涅洴港湮㴳滇淹潮濆瀹瀛㶖灊災灷炭煅熜爨牐犀犕獺王㺬玥㺸瑇瑜璅瓊㼛甤甾瘐㿼䀈眞真瞋䁆䂖硎䃣秫䄯穊穏䈂篆築䈧糒䊠糨糣紀絣䌁緇縂繅䌴䍙罺羕翺聠聰䏕育脃䐋脾媵舄辞䑫芑芋芝劳花芳芽苦茝荣莭茣莽菧荓菊菌菜䔫蓱蓳蔖蕤䕝䕡䕫虐虧虩蚩蚈蜎蛢蜨蝫螆蟡蠁䗹衠裗裞䘵裺㒻䚾䛇誠貫賁贛起跋趼跰軔邔郱鄑鄛鈸鋗鋘鉼鏹鐕開䦕閷䧦雃嶲霣䩮䩶韠䪲頩飢䬳餩馧駂駾䯎鱀鳽䳎䳭鵧䳸䵖黾鼅鼏鼖";function De(Ce){return Ce>=196608?Ce>=917760&&Ce<=917999?18874368:0:pe[me[Ce>>4]][Ce&15]}return{mapStr:ge,mapChar:De}})})(oe),function(de,fe){(function(pe,me){de.exports=me(ee.default,oe.exports)})(te,function(pe,me){function ge(Be,Se,Te){const Ae=[],he=pe.ucs2.decode(Be);for(let ye=0;ye<he.length;ye++){const be=he[ye],_e=pe.ucs2.encode([he[ye]]),Me=me.mapChar(be),Ie=Me>>23,Fe=Me>>21&3,Ee=Me>>5&65535,ke=Me&31,Ve=me.mapStr.substr(Ee,ke);if(Fe===0||Se&&Ie&1)throw new Error("Illegal char "+_e);Fe===1?Ae.push(Ve):Fe===2?Ae.push(Te?Ve:_e):Fe===3&&Ae.push(_e)}return Ae.join("").normalize("NFC")}function De(Be,Se,Te){Te===void 0&&(Te=!1);let he=ge(Be,Te,Se).split(".");return he=he.map(function(ve){return ve.startsWith("xn--")?(ve=pe.decode(ve.substring(4)),Ce(ve,Te,!1)):Ce(ve,Te,Se),ve}),he.join(".")}function Ce(Be,Se,Te){if(Be[2]==="-"&&Be[3]==="-")throw new Error("Failed to validate "+Be);if(Be.startsWith("-")||Be.endsWith("-"))throw new Error("Failed to validate "+Be);if(Be.includes("."))throw new Error("Failed to validate "+Be);if(ge(Be,Se,Te)!==Be)throw new Error("Failed to validate "+Be);const Ae=Be.codePointAt(0);if(me.mapChar(Ae)&2<<23)throw new Error("Label contains illegal character: "+Ae)}function we(Be,Se){Se===void 0&&(Se={});const Te="transitional"in Se?Se.transitional:!0,Ae="useStd3ASCII"in Se?Se.useStd3ASCII:!1,he="verifyDnsLength"in Se?Se.verifyDnsLength:!1,ye=De(Be,Te,Ae).split(".").map(pe.toASCII),be=ye.join(".");let _e;if(he){if(be.length<1||be.length>253)throw new Error("DNS name has wrong length: "+be);for(_e=0;_e<ye.length;_e++){const Me=ye[_e];if(Me.length<1||Me.length>63)throw new Error("DNS label has wrong length: "+Me)}}return be}function xe(Be){const Se=Array.isArray(Be);Se||(Be=[Be]);const Te={IDN:[],PC:[]};return Be.forEach(Ae=>{let he,ve;try{he=we(Ae,{transitional:!Ae.match(/\.(?:be|ca|de|fr|pm|re|swiss|tf|wf|yt)\.?$/)}),ve={PC:he,IDN:Re(he)}}catch{ve={PC:Ae,IDN:Ae}}Te.PC.push(ve.PC),Te.IDN.push(ve.IDN)}),Se?Te:{IDN:Te.IDN[0],PC:Te.PC[0]}}function Re(Be,Se){Se===void 0&&(Se={});const Te="useStd3ASCII"in Se?Se.useStd3ASCII:!1;return De(Be,!1,Te)}return{toUnicode:Re,toAscii:we,convert:xe}})}(ne);var ie=ae.exports.keccak_256,se=ne.exports;function ue(de){for(var fe="",pe=0;pe<32;pe++)fe+="00";var me=le(de);if(me)for(var ge=me.split("."),pe=ge.length-1;pe>=0;pe--){var De=ie(ge[pe]);fe=ie(new Buffer(fe+De,"hex"))}return"0x"+fe}function le(de){return de&&se.toUnicode(de,{useStd3ASCII:!0,transitional:!1})}var ce={hash:ue,normalize:le};return ce})}(dist$2)),dist$2.exports}var hasRequiredLabelhash;function requireLabelhash(){if(hasRequiredLabelhash)return labelhash;hasRequiredLabelhash=1;var n=requireInteropRequireDefault();Object.defineProperty(labelhash,"__esModule",{value:!0}),labelhash.decodeLabelhash=ee,labelhash.encodeLabelhash=c,labelhash.isDecrypted=ae,labelhash.isEncodedLabelhash=te,labelhash.labelhash=ne;var t=requireSha3$2(),u=n(requireDist$2());function c(oe){if(!oe.startsWith("0x"))throw new Error("Expected label hash to start with 0x");if(oe.length!==66)throw new Error("Expected label hash to have a length of 66");return"[".concat(oe.slice(2),"]")}function ee(oe){if(!(oe.startsWith("[")&&oe.endsWith("]")))throw Error("Expected encoded labelhash to start and end with square brackets");if(oe.length!==66)throw Error("Expected encoded labelhash to have a length of 66");return"".concat(oe.slice(1,-1))}function te(oe){return oe.startsWith("[")&&oe.endsWith("]")&&oe.length===66}function ae(oe){var ie=oe.split("."),se=ie.reduce(function(ue,le){return ue===!1?!1:!te(le)},!0);return se}function ne(oe){return te(oe)?"0x"+ee(oe):"0x"+(0,t.keccak_256)(u.default.normalize(oe))}return labelhash}var contents={},cjs$8={},cjs$7={},hasRequiredCjs$8;function requireCjs$8(){if(hasRequiredCjs$8)return cjs$7;hasRequiredCjs$8=1,Object.defineProperty(cjs$7,"__esModule",{value:!0});function n(t){if(t.length>=255)throw new TypeError("Alphabet too long");const u=new Uint8Array(256);for(let se=0;se<u.length;se++)u[se]=255;for(let se=0;se<t.length;se++){const ue=t.charAt(se),le=ue.charCodeAt(0);if(u[le]!==255)throw new TypeError(ue+" is ambiguous");u[le]=se}const c=t.length,ee=t.charAt(0),te=Math.log(c)/Math.log(256),ae=Math.log(256)/Math.log(c);function ne(se){if(se instanceof Uint8Array||(ArrayBuffer.isView(se)?se=new Uint8Array(se.buffer,se.byteOffset,se.byteLength):Array.isArray(se)&&(se=Uint8Array.from(se))),!(se instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(se.length===0)return"";let ue=0,le=0,ce=0;const de=se.length;for(;ce!==de&&se[ce]===0;)ce++,ue++;const fe=(de-ce)*ae+1>>>0,pe=new Uint8Array(fe);for(;ce!==de;){let De=se[ce],Ce=0;for(let we=fe-1;(De!==0||Ce<le)&&we!==-1;we--,Ce++)De+=256*pe[we]>>>0,pe[we]=De%c>>>0,De=De/c>>>0;if(De!==0)throw new Error("Non-zero carry");le=Ce,ce++}let me=fe-le;for(;me!==fe&&pe[me]===0;)me++;let ge=ee.repeat(ue);for(;me<fe;++me)ge+=t.charAt(pe[me]);return ge}function oe(se){if(typeof se!="string")throw new TypeError("Expected String");if(se.length===0)return new Uint8Array;let ue=0,le=0,ce=0;for(;se[ue]===ee;)le++,ue++;const de=(se.length-ue)*te+1>>>0,fe=new Uint8Array(de);for(;se[ue];){let De=u[se.charCodeAt(ue)];if(De===255)return;let Ce=0;for(let we=de-1;(De!==0||Ce<ce)&&we!==-1;we--,Ce++)De+=c*fe[we]>>>0,fe[we]=De%256>>>0,De=De/256>>>0;if(De!==0)throw new Error("Non-zero carry");ce=Ce,ue++}let pe=de-ce;for(;pe!==de&&fe[pe]===0;)pe++;const me=new Uint8Array(le+(de-pe));let ge=le;for(;pe!==de;)me[ge++]=fe[pe++];return me}function ie(se){const ue=oe(se);if(ue)return ue;throw new Error("Non-base"+c+" character")}return{encode:ne,decodeUnsafe:oe,decode:ie}}return cjs$7.default=n,cjs$7}var hasRequiredCjs$7;function requireCjs$7(){if(hasRequiredCjs$7)return cjs$8;hasRequiredCjs$7=1;var n=cjs$8&&cjs$8.__importDefault||function(c){return c&&c.__esModule?c:{default:c}};Object.defineProperty(cjs$8,"__esModule",{value:!0});var t=n(requireCjs$8()),u="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";return cjs$8.default=(0,t.default)(u),cjs$8}var hasRequiredContents;function requireContents(){if(hasRequiredContents)return contents;hasRequiredContents=1;var n=requireInteropRequireDefault();Object.defineProperty(contents,"__esModule",{value:!0}),contents.decodeContenthash=ae,contents.encodeContenthash=ie,contents.isValidContenthash=oe,contents.validateContent=ne;var t=n(requireSrc$6()),u=require$$6,c=n(requireCjs$7()),ee=["ipns-ns","ipfs-ns","swarm-ns","onion","onion3"],te=u.ethers.utils;function ae(se){var ue,le,ce;if(se.error)return{protocolType:null,decoded:se.error};if(se)try{ue=t.default.decode(se);var de=t.default.getCodec(se);de==="ipfs-ns"?le="ipfs":de==="ipns-ns"?(ue=c.default.decode(ue).slice(2).toString(),le="ipns"):de==="swarm-ns"?le="bzz":de==="onion"?le="onion":de==="onion3"?le="onion3":ue=se}catch(fe){ce=fe.message}return{protocolType:le,decoded:ue,error:ce}}function ne(se){return t.default.isHashOfType(se,t.default.Types.ipfs)||t.default.isHashOfType(se,t.default.Types.swarm)}function oe(se){try{var ue=t.default.getCodec(se);return te.isHexString(se)&&ee.includes(ue)}catch(le){console.log(le)}}function ie(se){var ue,le,ce=!1;if(se){var de=se.match(/^(ipfs|ipns|bzz|onion|onion3):\/\/(.*)/)||se.match(/\/(ipfs)\/(.*)/)||se.match(/\/(ipns)\/(.*)/);de&&(le=de[1],ue=de[2]);try{if(le==="ipfs")ue.length>=4&&(ce="0x"+t.default.encode("ipfs-ns",ue));else if(le==="ipns"){var fe=c.default.encode(Buffer.concat([Buffer.from([0,ue.length]),Buffer.from(ue)]));ce="0x"+t.default.encode("ipns-ns",fe)}else le==="bzz"?ue.length>=4&&(ce="0x"+t.default.fromSwarm(ue)):le==="onion"?ue.length==16&&(ce="0x"+t.default.encode("onion",ue)):le==="onion3"?ue.length==56&&(ce="0x"+t.default.encode("onion3",ue)):console.warn("Unsupported protocol or invalid value",{contentType:le,text:se})}catch{console.warn("Error encoding content hash",{text:se,encoded:ce})}}return ce}return contents}var namehash={},hasRequiredNamehash;function requireNamehash(){if(hasRequiredNamehash)return namehash;hasRequiredNamehash=1;var n=requireInteropRequireDefault();Object.defineProperty(namehash,"__esModule",{value:!0}),namehash.namehash=ee;var t=requireLabelhash(),u=n(requireDist$2()),c=requireSha3$2();function ee(te){for(var ae="",ne=0;ne<32;ne++)ae+="00";if(te)for(var oe=te.split("."),ie=oe.length-1;ie>=0;ie--){var se=void 0;if((0,t.isEncodedLabelhash)(oe[ie]))se=(0,t.decodeLabelhash)(oe[ie]);else{var ue=u.default.normalize(oe[ie]);se=(0,c.keccak_256)(ue)}ae=(0,c.keccak_256)(new Buffer.from(ae+se,"hex"))}return"0x"+ae}return namehash}var whitelist={},hasRequiredWhitelist;function requireWhitelist(){return hasRequiredWhitelist||(hasRequiredWhitelist=1,function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var t=["cz.bnb","id.bnb","sm.bnb","yg.bnb","cz.eth.bnb","id.eth.bnb","sm.eth.bnb","yg.eth.bnb","go.arb"];n.default=t}(whitelist)),whitelist}var hasRequiredUtils$3;function requireUtils$3(){return hasRequiredUtils$3||(hasRequiredUtils$3=1,function(n){var t=requireInteropRequireDefault();Object.defineProperty(n,"__esModule",{value:!0}),n.checkLabels=void 0,Object.defineProperty(n,"decodeContenthash",{enumerable:!0,get:function(){return ae.decodeContenthash}}),Object.defineProperty(n,"decodeLabelhash",{enumerable:!0,get:function(){return te.decodeLabelhash}}),n.emptyAddress=void 0,Object.defineProperty(n,"encodeContenthash",{enumerable:!0,get:function(){return ae.encodeContenthash}}),Object.defineProperty(n,"encodeLabelhash",{enumerable:!0,get:function(){return te.encodeLabelhash}}),n.getEnsStartBlock=le,Object.defineProperty(n,"isDecrypted",{enumerable:!0,get:function(){return te.isDecrypted}}),Object.defineProperty(n,"isEncodedLabelhash",{enumerable:!0,get:function(){return te.isEncodedLabelhash}}),n.isLabelValid=ge,Object.defineProperty(n,"isValidContenthash",{enumerable:!0,get:function(){return ae.isValidContenthash}}),Object.defineProperty(n,"labelhash",{enumerable:!0,get:function(){return te.labelhash}}),n.mergeLabels=void 0,Object.defineProperty(n,"namehash",{enumerable:!0,get:function(){return oe.namehash}}),n.normalize=me,n.uniq=n.parseSearchTerm=void 0,n.validateName=pe;var u=require$$6,c=require$$2,ee=t(requireLodash_toarray()),te=requireLabelhash(),ae=requireContents(),ne=t(requireDist$2()),oe=requireNamehash(),ie=t(requireWhitelist()),se=function(xe,Re){return xe.filter(function(Be,Se){return xe.map(function(Te){return Te[Re]}).indexOf(Be[Re])===Se})};n.uniq=se;var ue=function(){for(var xe=arguments.length,Re=new Array(xe),Be=0;Be<xe;Be++)Re[Be]=arguments[Be];return Re.map(function(Se){return null})};n.checkLabels=ue;function le(we){switch(we){case 1:case"1":return 3327417;case 3:case"3":return 25409;default:return 0}}var ce=function(xe,Re){return xe.map(function(Be,Se){return Be||Re[Se]})};n.mergeLabels=ce;function de(we){if(!we)return!1;var xe=(0,ee.default)(we).length;if(xe<3||xe>512)return!1;var Re;try{Re=ne.default.normalize(we)}catch{Re=we}return!(Re.length<3||Re.length>512)}function fe(we,xe){var Re=(xe==null?void 0:xe.toLowerCase())!=="eth",Be=/[\u0000-\u002c\u002e-\u002f\u003a-\u0040\u005b-\u005e\u0060\u007b-\u007f\u200b\u200c\u200d\ufeff]/g;return Re&&Be.test(we)?!1:!!(0,c.validate)(we)}function pe(we){if(!we)throw new Error("Invalid name");var xe=we.split("."),Re=we,Be="";xe.length>1&&(Re=xe.slice(0,xe.length-1).join("."),Be=xe[xe.length-1]),xe.length===3&&Be.toLowerCase()==="bnb"&&xe[1].toLowerCase()==="eth"&&(Re=xe[0]);var Se=xe.filter(function(Ae){return Ae.length<1}).length>0;if(Se)throw new Error("Domain cannot have empty labels");if(!de(Re)&&!ie.default.includes(we.toLowerCase()))throw new Error("Invalid name");if(!fe(Re,Be))throw new Error("Invalid name");var Te=xe.map(function(Ae){return(0,te.isEncodedLabelhash)(Ae)?Ae:ne.default.normalize(Ae)});try{return Te.join(".")}catch(Ae){throw Ae}}function me(we){var xe=we.split("."),Re=xe.map(function(Be){return(0,te.isEncodedLabelhash)(Be)?Be:ne.default.normalize(Be)});return Re.join(".")}function ge(we){try{if(pe(we),we.indexOf(".")===-1)return!0}catch(xe){return console.log(xe),!1}}var De=function(xe,Re){var Be=/[^.]+$/;try{pe(xe)}catch{return"invalid"}if(xe.indexOf(".")!==-1){var Se=xe.split("."),Te=xe.match(Be)?xe.match(Be)[0]:"";return Re?Te==="bnb"&&Se[Se.length-2].length<3?"short":"supported":"unsupported"}else return u.ethers.utils.isAddress(xe)?"address":Re?"tld":"search"};n.parseSearchTerm=De;var Ce="0x0000000000000000000000000000000000000000";n.emptyAddress=Ce}(utils$3)),utils$3}var hasRequiredDist$1;function requireDist$1(){return hasRequiredDist$1||(hasRequiredDist$1=1,function(n){var t=requireInteropRequireDefault();Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,Object.defineProperty(n,"getResolverContract",{enumerable:!0,get:function(){return ie.getResolverContract}}),Object.defineProperty(n,"getSIDContract",{enumerable:!0,get:function(){return ie.getSIDContract}}),n.getSidAddress=le,Object.defineProperty(n,"labelhash",{enumerable:!0,get:function(){return se.labelhash}}),Object.defineProperty(n,"namehash",{enumerable:!0,get:function(){return se.namehash}}),Object.defineProperty(n,"normalize",{enumerable:!0,get:function(){return se.normalize}}),Object.defineProperty(n,"validateName",{enumerable:!0,get:function(){return se.validateName}});var u=t(requireRegenerator()),c=t(requireSlicedToArray()),ee=t(requireClassCallCheck()),te=t(requireCreateClass()),ae=t(requireAsyncToGenerator()),ne=require$$6,oe=require$$7,ie=requireContract(),se=requireUtils$3(),ue=requireContents();function le(he){var ve=parseInt(he);if([97].includes(ve))return"0xfFB52185b56603e0fd71De9de4F6f902f05EEA23";if([1,3,4,5].includes(ve))return"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";if([56].includes(ve))return"0x08CEd32a7f3eeC915Ba84415e9C07a7286977956";if([421613].includes(ve))return"0x1f70fc8de5669eaa8C9ce72257c94500DC5ff2E4";if([42161].includes(ve))return"0x4a067EE58e73ac5E4a43722E008DFdf65B2bF348"}function ce(he){return de.apply(this,arguments)}function de(){return de=(0,ae.default)(u.default.mark(function he(ve){var ye,be,_e,Me,Ie,Fe,Ee,ke,Ve,ze;return u.default.wrap(function(Oe){for(;;)switch(Oe.prev=Oe.next){case 0:return ye=ve.name,be=ve.key,_e=ve.resolverAddr,Me=ve.provider,Oe.prev=1,Ie=new ne.ethers.providers.Resolver(Me,_e,ye),Fe=oe.formatsByName[be],Ee=Fe.coinType,ke=Fe.encoder,Ve=ne.utils.hexZeroPad(ne.BigNumber.from(Ee).toHexString(),32),Oe.next=7,Ie._fetchBytes("0xf1cb7e06",Ve);case 7:if(ze=Oe.sent,!(ze==="0x"||!ze)){Oe.next=10;break}return Oe.abrupt("return",se.emptyAddress);case 10:return Oe.abrupt("return",ke(Buffer.from(ze.slice(2),"hex")));case 13:return Oe.prev=13,Oe.t0=Oe.catch(1),console.error(Oe.t0),console.warn("Error getting addr on the resolver contract, are you sure the resolver address is a resolver contract?"),Oe.abrupt("return",se.emptyAddress);case 18:case"end":return Oe.stop()}},he,null,[[1,13]])})),de.apply(this,arguments)}function fe(he){return pe.apply(this,arguments)}function pe(){return pe=(0,ae.default)(u.default.mark(function he(ve){var ye,be,_e,Me,Ie,Fe,Ee,ke,Ve,ze,Ue;return u.default.wrap(function(Dt){for(;;)switch(Dt.prev=Dt.next){case 0:return ye=ve.name,be=ve.key,_e=ve.address,Me=ve.resolverAddr,Ie=ve.signer,Fe=(0,se.namehash)(ye),Ee=(0,ie.getResolverContract)({address:Me,provider:Ie}),ke=oe.formatsByName[be],Ve=ke.decoder,ze=ke.coinType,!_e||_e===""?Ue=Buffer.from(""):Ue=Ve(_e),Dt.abrupt("return",Ee["setAddr(bytes32,uint256,bytes)"](Fe,ze,Ue));case 6:case"end":return Dt.stop()}},he)})),pe.apply(this,arguments)}function me(he){return ge.apply(this,arguments)}function ge(){return ge=(0,ae.default)(u.default.mark(function he(ve){var ye,be,_e,Me,Ie,Fe,Ee,ke,Ve,ze,Ue,Oe,Dt;return u.default.wrap(function(Mt){for(;;)switch(Mt.prev=Mt.next){case 0:if(ye=ve.name,be=ve.resolverAddr,_e=ve.provider,Me=(0,se.namehash)(ye),parseInt(be,16)!==0){Mt.next=4;break}return Mt.abrupt("return",se.emptyAddress);case 4:return Mt.prev=4,Ie=(0,ie.getResolverContract)({address:be,provider:_e}),Fe=ne.utils.solidityKeccak256(["string"],["contenthash(bytes32)"]).slice(0,10),Mt.next=9,Ie.supportsInterface(Fe);case 9:if(Ee=Mt.sent,!Ee){Mt.next=25;break}return Mt.t0=ue.decodeContenthash,Mt.next=14,Ie.contenthash(Me);case 14:if(Mt.t1=Mt.sent,ke=(0,Mt.t0)(Mt.t1),Ve=ke.protocolType,ze=ke.decoded,Ue=ke.error,!Ue){Mt.next=22;break}return console.log("error decoding",Ue),Mt.abrupt("return",{value:se.emptyAddress,contentType:"contenthash"});case 22:return Mt.abrupt("return",{value:"".concat(Ve,"://").concat(ze),contentType:"contenthash"});case 25:return Mt.next=27,Ie.content(Me);case 27:return Oe=Mt.sent,Mt.abrupt("return",{value:Oe,contentType:"oldcontent"});case 29:Mt.next=36;break;case 31:return Mt.prev=31,Mt.t2=Mt.catch(4),Dt="Error getting content on the resolver contract, are you sure the resolver address is a resolver contract?",console.warn(Dt,Mt.t2),Mt.abrupt("return",{value:Dt,contentType:"error"});case 36:case"end":return Mt.stop()}},he,null,[[4,31]])})),ge.apply(this,arguments)}function De(he){return Ce.apply(this,arguments)}function Ce(){return Ce=(0,ae.default)(u.default.mark(function he(ve){var ye,be,_e,Me,Ie,Fe;return u.default.wrap(function(ke){for(;;)switch(ke.prev=ke.next){case 0:return ye=ve.name,be=ve.content,_e=ve.resolverAddr,Me=ve.signer,Ie=be,parseInt(be,16)!==0&&(Ie=(0,ue.encodeContenthash)(be)),Fe=(0,ie.getResolverContract)({address:_e,provider:Me}),ke.abrupt("return",Fe.setContenthash((0,se.namehash)(ye),Ie));case 5:case"end":return ke.stop()}},he)})),Ce.apply(this,arguments)}function we(he){return xe.apply(this,arguments)}function xe(){return xe=(0,ae.default)(u.default.mark(function he(ve){var ye,be,_e,Me,Ie,Fe,Ee;return u.default.wrap(function(Ve){for(;;)switch(Ve.prev=Ve.next){case 0:if(ye=ve.name,be=ve.key,_e=ve.resolverAddr,Me=ve.provider,Ie=(0,se.namehash)(ye),parseInt(_e,16)!==0){Ve.next=4;break}return Ve.abrupt("return","");case 4:return Ve.prev=4,Fe=(0,ie.getResolverContract)({address:_e,provider:Me}),Ve.next=8,Fe.text(Ie,be);case 8:return Ee=Ve.sent,Ve.abrupt("return",Ee);case 12:return Ve.prev=12,Ve.t0=Ve.catch(4),console.warn("Error getting text record on the resolver contract, are you sure the resolver address is a resolver contract?"),Ve.abrupt("return","");case 16:case"end":return Ve.stop()}},he,null,[[4,12]])})),xe.apply(this,arguments)}function Re(he){return Be.apply(this,arguments)}function Be(){return Be=(0,ae.default)(u.default.mark(function he(ve){var ye,be,_e,Me,Ie,Fe;return u.default.wrap(function(ke){for(;;)switch(ke.prev=ke.next){case 0:return ye=ve.name,be=ve.key,_e=ve.recordValue,Me=ve.resolverAddr,Ie=ve.signer,Fe=(0,se.namehash)(ye),ke.abrupt("return",(0,ie.getResolverContract)({address:Me,provider:Ie}).setText(Fe,be,_e));case 3:case"end":return ke.stop()}},he)})),Be.apply(this,arguments)}var Se=function(){function he(ve){var ye=ve.address,be=ve.sid;(0,ee.default)(this,he),this.address=ye,this.sid=be}return(0,te.default)(he,[{key:"name",value:function(ye){return new Te({name:ye,sid:this.sid,provider:this.provider,signer:this.signer,resolver:this.address})}}]),he}(),Te=function(){function he(ve){(0,ee.default)(this,he);var ye=ve.name,be=ve.sid,_e=ve.provider,Me=ve.signer,Ie=ve.namehash,Fe=ve.resolver;ve.namehash&&(this.namehash=Ie),this.sid=be,this.sidWithSigner=this.sid.connect(Me),this.name=ye,this.namehash=(0,se.namehash)(ye),this.provider=_e,this.signer=Me,this.resolver=Fe}return(0,te.default)(he,[{key:"getOwner",value:function(){var ve=(0,ae.default)(u.default.mark(function be(){return u.default.wrap(function(Me){for(;;)switch(Me.prev=Me.next){case 0:return Me.abrupt("return",this.sid.owner(this.namehash));case 1:case"end":return Me.stop()}},be,this)}));function ye(){return ve.apply(this,arguments)}return ye}()},{key:"setOwner",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){return u.default.wrap(function(Ie){for(;;)switch(Ie.prev=Ie.next){case 0:if(_e){Ie.next=2;break}throw new Error("No newOwner address provided!");case 2:return Ie.abrupt("return",this.sidWithSigner.setOwner(this.namehash,_e));case 3:case"end":return Ie.stop()}},be,this)}));function ye(be){return ve.apply(this,arguments)}return ye}()},{key:"getResolver",value:function(){var ve=(0,ae.default)(u.default.mark(function be(){var _e,Me,Ie,Fe;return u.default.wrap(function(ke){for(;;)switch(ke.prev=ke.next){case 0:_e=this.name,Me=this.namehash;case 2:if(!(_e===""||_e===".")){ke.next=5;break}return ke.abrupt("return",se.emptyAddress);case 5:if(_e.includes(".")){ke.next=7;break}return ke.abrupt("return",se.emptyAddress);case 7:return ke.next=9,this.sid.resolver(Me);case 9:if(Ie=ke.sent,Ie===se.emptyAddress){ke.next=20;break}if(Fe=(0,ie.getResolverContract)({address:Ie,provider:this.provider}),ke.t0=_e!==this.name,!ke.t0){ke.next=17;break}return ke.next=16,Fe.supportsInterface("0x9061b923");case 16:ke.t0=!ke.sent;case 17:if(!ke.t0){ke.next=19;break}return ke.abrupt("return",se.emptyAddress);case 19:return ke.abrupt("return",Ie);case 20:_e=_e.split(".").slice(1).join("."),Me=(0,se.namehash)(_e),ke.next=2;break;case 24:case"end":return ke.stop()}},be,this)}));function ye(){return ve.apply(this,arguments)}return ye}()},{key:"setResolver",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){return u.default.wrap(function(Ie){for(;;)switch(Ie.prev=Ie.next){case 0:if(_e){Ie.next=2;break}throw new Error("No resolver address provided!");case 2:return Ie.abrupt("return",this.sidWithSigner.setResolver(this.namehash,_e));case 3:case"end":return Ie.stop()}},be,this)}));function ye(be){return ve.apply(this,arguments)}return ye}()},{key:"getTTL",value:function(){var ve=(0,ae.default)(u.default.mark(function be(){return u.default.wrap(function(Me){for(;;)switch(Me.prev=Me.next){case 0:return Me.abrupt("return",this.sid.ttl(this.namehash));case 1:case"end":return Me.stop()}},be,this)}));function ye(){return ve.apply(this,arguments)}return ye}()},{key:"getResolverAddr",value:function(){var ve=(0,ae.default)(u.default.mark(function be(){return u.default.wrap(function(Me){for(;;)switch(Me.prev=Me.next){case 0:if(!this.resolver){Me.next=4;break}return Me.abrupt("return",this.resolver);case 4:return Me.abrupt("return",this.getResolver());case 5:case"end":return Me.stop()}},be,this)}));function ye(){return ve.apply(this,arguments)}return ye}()},{key:"getAddress",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){var Me,Ie,Fe;return u.default.wrap(function(ke){for(;;)switch(ke.prev=ke.next){case 0:return ke.next=2,this.getResolverAddr();case 2:if(Me=ke.sent,parseInt(Me,16)!==0){ke.next=5;break}return ke.abrupt("return",se.emptyAddress);case 5:if(_e){ke.next=11;break}return Ie=new ne.ethers.providers.Resolver(this.provider,Me,this.name),ke.next=9,Ie.getAddress();case 9:return Fe=ke.sent,ke.abrupt("return",Fe||se.emptyAddress);case 11:return ke.abrupt("return",ce({name:this.name,key:_e,resolverAddr:Me,provider:this.provider}));case 12:case"end":return ke.stop()}},be,this)}));function ye(be){return ve.apply(this,arguments)}return ye}()},{key:"setAddress",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e,Me){var Ie;return u.default.wrap(function(Ee){for(;;)switch(Ee.prev=Ee.next){case 0:if(_e){Ee.next=2;break}throw new Error("No coinId provided");case 2:if(Me){Ee.next=4;break}throw new Error("No address provided");case 4:return Ee.next=6,this.getResolverAddr();case 6:return Ie=Ee.sent,Ee.abrupt("return",fe({name:this.name,key:_e,address:Me,resolverAddr:Ie,signer:this.signer}));case 8:case"end":return Ee.stop()}},be,this)}));function ye(be,_e){return ve.apply(this,arguments)}return ye}()},{key:"getContent",value:function(){var ve=(0,ae.default)(u.default.mark(function be(){var _e;return u.default.wrap(function(Ie){for(;;)switch(Ie.prev=Ie.next){case 0:return Ie.next=2,this.getResolverAddr();case 2:return _e=Ie.sent,Ie.abrupt("return",me({name:this.name,resolverAddr:_e,provider:this.provider}));case 4:case"end":return Ie.stop()}},be,this)}));function ye(){return ve.apply(this,arguments)}return ye}()},{key:"setContenthash",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){var Me;return u.default.wrap(function(Fe){for(;;)switch(Fe.prev=Fe.next){case 0:return Fe.next=2,this.getResolverAddr();case 2:return Me=Fe.sent,console.log(_e),Fe.abrupt("return",De({name:this.name,content:_e,resolverAddr:Me,signer:this.signer}));case 5:case"end":return Fe.stop()}},be,this)}));function ye(be){return ve.apply(this,arguments)}return ye}()},{key:"getText",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){var Me;return u.default.wrap(function(Fe){for(;;)switch(Fe.prev=Fe.next){case 0:return Fe.next=2,this.getResolverAddr();case 2:return Me=Fe.sent,Fe.abrupt("return",we({name:this.name,key:_e,resolverAddr:Me,provider:this.provider}));case 4:case"end":return Fe.stop()}},be,this)}));function ye(be){return ve.apply(this,arguments)}return ye}()},{key:"setText",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e,Me){var Ie;return u.default.wrap(function(Ee){for(;;)switch(Ee.prev=Ee.next){case 0:return Ee.next=2,this.getResolverAddr();case 2:return Ie=Ee.sent,Ee.abrupt("return",Re({name:this.name,key:_e,recordValue:Me,resolverAddr:Ie,signer:this.signer}));case 4:case"end":return Ee.stop()}},be,this)}));function ye(be,_e){return ve.apply(this,arguments)}return ye}()},{key:"setSubnodeOwner",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e,Me){var Ie;return u.default.wrap(function(Ee){for(;;)switch(Ee.prev=Ee.next){case 0:return Ie=(0,se.labelhash)(_e),Ee.abrupt("return",this.sidWithSigner.setSubnodeOwner(this.namehash,Ie,Me));case 2:case"end":return Ee.stop()}},be,this)}));function ye(be,_e){return ve.apply(this,arguments)}return ye}()},{key:"setSubnodeRecord",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e,Me,Ie){var Fe,Ee,ke=arguments;return u.default.wrap(function(ze){for(;;)switch(ze.prev=ze.next){case 0:return Fe=ke.length>3&&ke[3]!==void 0?ke[3]:0,Ee=(0,se.labelhash)(_e),ze.abrupt("return",this.sidWithSigner.setSubnodeRecord(this.namehash,Ee,Me,Ie,Fe));case 3:case"end":return ze.stop()}},be,this)}));function ye(be,_e,Me){return ve.apply(this,arguments)}return ye}()},{key:"createSubdomain",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){var Me,Ie,Fe,Ee,ke,Ve;return u.default.wrap(function(Ue){for(;;)switch(Ue.prev=Ue.next){case 0:return Me=this.getResolver(),Ie=this.getOwner(),Ue.next=4,Promise.all([Me,Ie]);case 4:return Fe=Ue.sent,Ee=(0,c.default)(Fe,2),ke=Ee[0],Ve=Ee[1],Ue.abrupt("return",this.setSubnodeRecord(_e,Ve,ke));case 9:case"end":return Ue.stop()}},be,this)}));function ye(be){return ve.apply(this,arguments)}return ye}()},{key:"deleteSubdomain",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){return u.default.wrap(function(Ie){for(;;)switch(Ie.prev=Ie.next){case 0:return Ie.abrupt("return",this.setSubnodeRecord(_e,se.emptyAddress,se.emptyAddress));case 1:case"end":return Ie.stop()}},be,this)}));function ye(be){return ve.apply(this,arguments)}return ye}()}]),he}(),Ae=function(){function he(ve){(0,ee.default)(this,he);var ye=ve.provider,be=ve.sidAddress;if(!ne.utils.isAddress(be))throw new Error("invalid sidAddress");var _e;ne.ethers.providers.Provider.isProvider(ye)?_e=ye:_e=new ne.ethers.providers.Web3Provider(ye),this.provider=_e,this.signer=_e.getSigner(),this.sid=(0,ie.getSIDContract)({address:be,provider:_e})}return(0,te.default)(he,[{key:"name",value:function(ye){return(0,se.validateName)(ye),new Te({name:ye,sid:this.sid,provider:this.provider,signer:this.signer})}},{key:"resolver",value:function(ye){return new Se({sid:this.sid,provider:this.provider,address:ye})}},{key:"getName",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e){var Me,Ie,Fe,Ee;return u.default.wrap(function(Ve){for(;;)switch(Ve.prev=Ve.next){case 0:return Me="".concat(_e.slice(2),".addr.reverse"),Ve.next=3,this.sid.resolver((0,se.namehash)(Me));case 3:return Ie=Ve.sent,Ve.next=6,this.getNameWithResolver(_e,Ie);case 6:if(Fe=Ve.sent,Fe.name){Ve.next=9;break}return Ve.abrupt("return",Fe);case 9:return Ve.prev=9,Ve.next=12,this.name(Fe.name).getAddress();case 12:if(Ee=Ve.sent,Ee.toLowerCase()!==_e.toLowerCase()){Ve.next=17;break}return Ve.abrupt("return",Fe);case 17:return Ve.abrupt("return",{name:null});case 18:Ve.next=24;break;case 20:return Ve.prev=20,Ve.t0=Ve.catch(9),console.error(Ve.t0),Ve.abrupt("return",{name:null});case 24:case"end":return Ve.stop()}},be,this,[[9,20]])}));function ye(be){return ve.apply(this,arguments)}return ye}()},{key:"getNameWithResolver",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e,Me){var Ie,Fe,Ee,ke;return u.default.wrap(function(ze){for(;;)switch(ze.prev=ze.next){case 0:if(Ie="".concat(_e.slice(2),".addr.reverse"),Fe=(0,se.namehash)(Ie),parseInt(Me,16)!==0){ze.next=4;break}return ze.abrupt("return",{name:null});case 4:return ze.prev=4,Ee=(0,ie.getResolverContract)({address:Me,provider:this.provider}),ze.next=8,Ee.name(Fe);case 8:return ke=ze.sent,ze.abrupt("return",{name:ke});case 12:ze.prev=12,ze.t0=ze.catch(4),console.log("Error getting name for reverse record of ".concat(_e),ze.t0);case 15:case"end":return ze.stop()}},be,this,[[4,12]])}));function ye(be,_e){return ve.apply(this,arguments)}return ye}()},{key:"setReverseRecord",value:function(){var ve=(0,ae.default)(u.default.mark(function be(_e,Me){var Ie,Fe;return u.default.wrap(function(ke){for(;;)switch(ke.prev=ke.next){case 0:return ke.next=2,this.name("addr.reverse").getOwner("addr.reverse");case 2:return Ie=ke.sent,Fe=(0,ie.getReverseRegistrarContract)({address:Ie,provider:this.signer}),ke.abrupt("return",Fe.setName(_e));case 5:case"end":return ke.stop()}},be,this)}));function ye(be,_e){return ve.apply(this,arguments)}return ye}()}]),he}();n.default=Ae}(dist$4)),dist$4}var distExports=requireDist$1();const SID=getDefaultExportFromCjs(distExports);class SIDResolver{constructor(t){this.supportedTLDs=["bnb","arb"],this.rpc=t,this.name="spaceid"}async init(){}async resolveReverseName(t){const u=new JsonRpcProvider({url:this.rpc.node.bnb,headers:{"user-agent":"enkrypt/name-resolver"}}),ee=await new SID({provider:u,sidAddress:distExports.getSidAddress("56")}).getName(t);if(ee)return ee.name;const te=new JsonRpcProvider({url:this.rpc.node.arb,headers:{"user-agent":"enkrypt/name-resolver"}}),ne=await new SID({provider:te,sidAddress:distExports.getSidAddress("42161")}).getName(t);return ne?ne.name:null}async resolveAddress(t){const u=new JsonRpcProvider({url:this.rpc.node[getTLD(t)],headers:{"user-agent":"enkrypt/name-resolver"}}),ee=await new SID({provider:u,sidAddress:distExports.getSidAddress(getTLD(t)==="bnb"?"56":"42161")}).name(t).getAddress();return parseInt(ee,16)===0?null:ee}isSupportedName(t){return this.supportedTLDs.includes(getTLD(t))}}class NameResolver{constructor(t){this.ens=new ENSResolver(t.ens),this.rns=new RNSResolver,this.ud=new UDResolver,this.sid=new SIDResolver(t.sid),this.initDone=Promise.all([this.ens.init(),this.rns.init(),this.ud.init(),this.sid.init()])}async resolveReverseName(t){return this.initDone.then(()=>Promise.all([this.ens.resolveReverseName(t),this.sid.resolveReverseName(t),this.rns.resolveReverseName(t),this.ud.resolveReverseName(t)]).then(u=>{for(const c of u)if(c!==null)return c;return null}))}async resolveAddress(t,u="ETH"){return this.initDone.then(()=>this.sid.isSupportedName(t)?this.sid.resolveAddress(t):this.rns.isSupportedName(t)?this.rns.resolveAddress(t,u):this.ud.isSupportedName(t)?this.ud.resolveAddress(t,u):this.ens.isSupportedName(t)?this.ens.resolveAddress(t,u):null)}}class GenericNameResolver{constructor(){Ca(this,"nameResolver");this.nameResolver=new NameResolver({ens:{node:"https://nodes.mewapi.io/rpc/eth"},sid:{node:{bnb:"https://nodes.mewapi.io/rpc/bsc",arb:"https://nodes.mewapi.io/rpc/arb"}}})}async resolveName(t,u){let c=null;for(const ee of u)if(c=await this.nameResolver.resolveAddress(t,ee).catch(()=>null),c)return c;return c}}const _hoisted_1$x={class:"container"},_hoisted_2$s={key:0,class:"swap"},_hoisted_3$p={class:"swap__header"},_hoisted_4$l={class:"swap__wrap"},_hoisted_5$d={class:"swap__arrows"},_hoisted_6$9={class:"swap__buttons"},_hoisted_7$2={class:"swap__buttons-cancel"},_hoisted_8={class:"swap__buttons-send"},_sfc_main$A=defineComponent({__name:"index",props:{network:{type:Object,default:()=>({})},accountInfo:{type:Object,default:()=>({})}},setup(n){const t=(...qe)=>{},u=useRouter(),c=useRoute(),ee=new GenericNameResolver,te=n,ae=c.params.id,ne=ref(),oe=ref({name:"Loading",symbol:"",decimals:18,address:"",logoURI:te.network.icon,type:""}),ie=ref(null),se=ref([]),ue=ref(null),le=ref(!1),ce=ref(null),de=ref([]),fe=ref(""),pe=ref([]),me=ref(),ge=ref(!1),De=ref(SWAP_LOADING.LOADING),Ce=ref(!1),we=ref({displayAddress:qe=>qe,identicon:qe=>"",networkName:""}),xe=ref({inputAmount:"",noProviders:!1}),Re=ref([]),Be=ref(""),Se=ref(!0),Te=ref(!1),Ae=ref(),he=ref([]),ve=ref(!0),ye=ref(!1),be=ref(!1),_e=ref(!1),Me=ref(!1);let Ie;switch(te.network.name){case NetworkNames.Solana:Ie=new Connection(te.network.node);break;default:Ie=new Web3Eth(te.network.node);break}const Fe=new Swap$1({api:Ie,network:te.network.name,walletIdentifier:WalletIdentifier.enkrypt,evmOptions:{infiniteApproval:!0}});onMounted(async()=>{var qe;if(trackSwapEvents(SwapEventType.SwapOpen,{network:te.network.name}),!isSupportedNetwork(te.network.name)){me.value=SwapError.NETWORK_NOT_SUPPORTED,Xt();return}_e.value=!0,te.network.getAllTokenInfo((qe=te.accountInfo.selectedAccount)==null?void 0:qe.address).then(async Ye=>{await Fe.initPromise;let Ze=Fe.getFromTokens();const He={};Ye.forEach(Pt=>{(libExports.toBN(Pt.balance).gtn(0)||Pt.contract===NATIVE_TOKEN_ADDRESS||!Pt.contract)&&(He[Pt.contract||NATIVE_TOKEN_ADDRESS]=Pt.balance)}),Ze={all:Ze.all.filter(Pt=>He[Pt.address]?(Pt.balance=libExports.toBN(He[Pt.address]),!0):!1),top:Ze.top.filter(Pt=>He[Pt.address]?(Pt.balance=libExports.toBN(He[Pt.address]),!0):!1),trending:Ze.trending.filter(Pt=>He[Pt.address]?(Pt.balance=libExports.toBN(He[Pt.address]),!0):!1)},ne.value=Ze.all,ne.value.length&&(oe.value=ne.value[0]);const je=Fe.getToTokens(),Ke=Object.keys(je.all);let Ge;if(Ke.forEach(Pt=>{const Gt=getNetworkInfoByName(Pt);te.network.name===Pt&&(Ge=je.all[Pt].length===1?getNetworkInfoByName(NetworkNames.Ethereum):Gt),se.value.push(Gt)}),se.value.sort(sortByRank),!Ge){me.value=SwapError.TEMP_NOT_SUPPORTED,Xt();return}await $e(Ge),ke(),_e.value=!1})});const Ee={},ke=()=>{const qe=Fe.getToTokens();pe.value=[],ce.value=null;const Ye=5;de.value=qe.all[ue.value.id].filter(He=>{var je;return Ee[He.decimals]||(Ee[He.decimals]=libExports.toBN(toBase("1",He.decimals))),He.balance=Ee[He.decimals],ue.value.id!==te.network.name||He.address!==((je=oe.value)==null?void 0:je.address)}),qe.trending[ue.value.id]&&pe.value.push(...qe.trending[ue.value.id].slice(0,Ye)),qe.top[ue.value.id]&&pe.value.length<Ye&&pe.value.push(...qe.top[ue.value.id].slice(0,Ye-pe.value.length));const Ze=[];pe.value=pe.value.filter(He=>{var Ke;Ee[He.decimals]||(Ee[He.decimals]=libExports.toBN(toBase("1",He.decimals))),He.balance=Ee[He.decimals];const je=Ze.includes(He.address);return Ze.push(He.address),(ue.value.id!==te.network.name||He.address!==((Ke=oe.value)==null?void 0:Ke.address))&&!je}),de.value.length===1&&(ce.value=de.value[0]),getAccountsByNetworkName(ue.value.id).then(He=>{he.value=He;const je=He.find(Ke=>Ke.address===te.accountInfo.selectedAccount.address);je?(Be.value=je.address,Oe()):He.length&&(Be.value=He[0].address,Oe())})},Ve=()=>{ie.value=new SwapToken(oe.value).getBalanceReadable()},ze=qe=>{const Ye=lodashExports.debounce(()=>{ee.resolveName(qe,[te.network.name,"ETH"]).then(Ze=>{Ze&&ze(Ze)})},500);qe.includes(".")&&Ye();try{Be.value=we.value.displayAddress(qe)}catch{Be.value=qe}Oe()},Ue=()=>{Te.value=!Te.value},Oe=lodashExports.debounce(()=>{var qe;if(Se.value=!0,!Be.value)Se.value=!1;else try{const Ye=we.value.displayAddress(Be.value);(qe=ce.value)==null||qe.networkInfo.isAddress(Ye).then(Ze=>{Se.value=Ze,Ze&&Kt()})}catch{Se.value=!1}},200),Dt=computed(()=>{var Ye;const qe=(Ye=ne.value)==null?void 0:Ye.find(Ze=>Ze.address===NATIVE_TOKEN_ADDRESS);if(qe)return new SwapToken(qe)}),$t=(qe,Ye)=>{if(ce.value==null||(xe.value.inputAmount="",!Ye.length))return;const Ze=new SwapToken(oe.value),He=Ze.token.address===NATIVE_TOKEN_ADDRESS?Dt.value.getBalanceRaw().sub(qe):Dt.value.getBalanceRaw(),je=Ye.filter(Ke=>Ke.minMax.minimumFrom.lte(qe)&&Ke.minMax.maximumFrom.gte(qe)&&Ke.additionalNativeFees.lte(He));if(!je.length){let Ke=Ye[0].minMax.minimumFrom,Ge=Ye[0].minMax.maximumFrom,Pt=Dt.value.getBalanceRaw();Ye.forEach(Gt=>{Gt.minMax.minimumFrom.lt(Ke)&&(Ke=Gt.minMax.minimumFrom),Gt.minMax.maximumFrom.gt(Ge)&&(Ge=Gt.minMax.maximumFrom),!Gt.additionalNativeFees.eqn(0)&&Gt.additionalNativeFees.lt(Pt)&&(Pt=Gt.additionalNativeFees)}),qe.gt(Ze.getBalanceRaw())?xe.value.inputAmount="Insufficient funds":qe.lt(Ke)?xe.value.inputAmount="Amount too low":qe.gt(Ge)?xe.value.inputAmount=`Maximum amount: ${Ze.toReadable(Ge)} ${Dt.value.token.symbo